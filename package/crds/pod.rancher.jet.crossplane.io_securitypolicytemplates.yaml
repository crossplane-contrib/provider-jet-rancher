---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: securitypolicytemplates.pod.rancher.jet.crossplane.io
spec:
  group: pod.rancher.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - rancherjet
    kind: SecurityPolicyTemplate
    listKind: SecurityPolicyTemplateList
    plural: securitypolicytemplates
    singular: securitypolicytemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecurityPolicyTemplate is the Schema for the SecurityPolicyTemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecurityPolicyTemplateSpec defines the desired state of SecurityPolicyTemplate
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowPrivilegeEscalation:
                    description: allowPrivilegeEscalation determines if a pod can
                      request to allow privilege escalation. If unspecified, defaults
                      to true.
                    type: boolean
                  allowedCapabilities:
                    description: allowedCapabilities is a list of capabilities that
                      can be requested to add to the container. Capabilities in this
                      field may be added at the pod author's discretion. You must
                      not list a capability in both allowedCapabilities and requiredDropCapabilities.
                    items:
                      type: string
                    type: array
                  allowedCsiDriver:
                    description: AllowedCSIDrivers is a whitelist of inline CSI drivers
                      that must be explicitly set to be embedded within a pod spec.
                      An empty value indicates that any CSI driver can be used for
                      inline ephemeral volumes. This is an alpha field, and is only
                      honored if the API server enables the CSIInlineVolume feature
                      gate.
                    items:
                      properties:
                        name:
                          description: Name is the registered name of the CSI driver
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  allowedFlexVolume:
                    description: allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty
                      or nil indicates that all Flexvolumes may be used.  This parameter
                      is effective only when the usage of the Flexvolumes is allowed
                      in the "volumes" field.
                    items:
                      properties:
                        driver:
                          description: driver is the name of the Flexvolume driver.
                          type: string
                      required:
                      - driver
                      type: object
                    type: array
                  allowedHostPath:
                    description: allowedHostPaths is a white list of allowed host
                      paths. Empty indicates that all host paths may be used.
                    items:
                      properties:
                        pathPrefix:
                          description: pathPrefix is the path prefix that the host
                            volume must match. It does not support `*`. Trailing slashes
                            are trimmed when validating the path prefix with a host
                            path.
                          type: string
                        readOnly:
                          description: when set to true, will allow host volumes matching
                            the pathPrefix only if all volume mounts are readOnly.
                          type: boolean
                      required:
                      - pathPrefix
                      type: object
                    type: array
                  allowedProcMountTypes:
                    description: AllowedProcMountTypes is a whitelist of allowed ProcMountTypes.
                      Empty or nil indicates that only the DefaultProcMountType may
                      be used. This requires the ProcMountType feature flag to be
                      enabled.
                    items:
                      type: string
                    type: array
                  allowedUnsafeSysctls:
                    description: allowedUnsafeSysctls is a list of explicitly allowed
                      unsafe sysctls, defaults to none. Each entry is either a plain
                      sysctl name or ends in "*" in which case it is considered as
                      a prefix of allowed sysctls. Single * means all unsafe sysctls
                      are allowed. Kubelet has to whitelist all allowed unsafe sysctls
                      explicitly to avoid rejection.
                    items:
                      type: string
                    type: array
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations of the resource
                    type: object
                  defaultAddCapabilities:
                    description: defaultAddCapabilities is the default set of capabilities
                      that will be added to the container unless the pod spec specifically
                      drops the capability.  You may not list a capability in both
                      defaultAddCapabilities and requiredDropCapabilities. Capabilities
                      added here are implicitly allowed, and need not be included
                      in the allowedCapabilities list.
                    items:
                      type: string
                    type: array
                  defaultAllowPrivilegeEscalation:
                    description: defaultAllowPrivilegeEscalation controls the default
                      setting for whether a process can gain more privileges than
                      its parent process.
                    type: boolean
                  description:
                    description: Pod Security Policy template policy description
                    type: string
                  forbiddenSysctls:
                    description: forbiddenSysctls is a list of explicitly forbidden
                      sysctls, defaults to none. Each entry is either a plain sysctl
                      name or ends in "*" in which case it is considered as a prefix
                      of forbidden sysctls. Single * means all sysctls are forbidden.
                    items:
                      type: string
                    type: array
                  fsGroup:
                    description: fsGroup is the strategy that will dictate what fs
                      group is used by the SecurityContext.
                    items:
                      properties:
                        range:
                          description: ranges are the allowed ranges of fs groups.  If
                            you would like to force a single fs group then supply
                            a single range with the same start and end. Required for
                            MustRunAs.
                          items:
                            properties:
                              max:
                                description: max is the end of the range, inclusive.
                                type: number
                              min:
                                description: min is the start of the range, inclusive.
                                type: number
                            required:
                            - max
                            - min
                            type: object
                          type: array
                        rule:
                          description: rule is the strategy that will dictate what
                            FSGroup is used in the SecurityContext.
                          type: string
                      type: object
                    type: array
                  hostIpc:
                    description: hostIPC determines if the policy allows the use of
                      HostIPC in the pod spec.
                    type: boolean
                  hostNetwork:
                    description: hostNetwork determines if the policy allows the use
                      of HostNetwork in the pod spec.
                    type: boolean
                  hostPid:
                    description: hostPID determines if the policy allows the use of
                      HostPID in the pod spec.
                    type: boolean
                  hostPort:
                    description: hostPorts determines which host port ranges are allowed
                      to be exposed.
                    items:
                      properties:
                        max:
                          description: max is the end of the range, inclusive.
                          type: number
                        min:
                          description: min is the start of the range, inclusive.
                          type: number
                      required:
                      - max
                      - min
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels of the resource
                    type: object
                  privileged:
                    description: privileged determines if a pod can request to be
                      run as privileged.
                    type: boolean
                  readOnlyRootFilesystem:
                    description: readOnlyRootFilesystem when set to true will force
                      containers to run with a read only root file system.  If the
                      container specifically requests to run with a non-read only
                      root file system the PSP should deny the pod. If set to false
                      the container may run with a read only root file system if it
                      wishes but it will not be forced to.
                    type: boolean
                  requiredDropCapabilities:
                    description: requiredDropCapabilities are the capabilities that
                      will be dropped from the container.  These are required to be
                      dropped and cannot be added.
                    items:
                      type: string
                    type: array
                  runAsGroup:
                    description: RunAsGroup is the strategy that will dictate the
                      allowable RunAsGroup values that may be set. If this field is
                      omitted, the pod's RunAsGroup can take any value. This field
                      requires the RunAsGroup feature gate to be enabled.
                    items:
                      properties:
                        range:
                          description: ranges are the allowed ranges of gids that
                            may be used. If you would like to force a single gid then
                            supply a single range with the same start and end. Required
                            for MustRunAs.
                          items:
                            properties:
                              max:
                                description: max is the end of the range, inclusive.
                                type: number
                              min:
                                description: min is the start of the range, inclusive.
                                type: number
                            required:
                            - max
                            - min
                            type: object
                          type: array
                        rule:
                          description: rule is the strategy that will dictate the
                            allowable RunAsGroup values that may be set.
                          type: string
                      required:
                      - rule
                      type: object
                    type: array
                  runAsUser:
                    description: runAsUser is the strategy that will dictate the allowable
                      RunAsUser values that may be set.
                    items:
                      properties:
                        range:
                          description: ranges are the allowed ranges of uids that
                            may be used. If you would like to force a single uid then
                            supply a single range with the same start and end. Required
                            for MustRunAs.
                          items:
                            properties:
                              max:
                                description: max is the end of the range, inclusive.
                                type: number
                              min:
                                description: min is the start of the range, inclusive.
                                type: number
                            required:
                            - max
                            - min
                            type: object
                          type: array
                        rule:
                          description: rule is the strategy that will dictate the
                            allowable RunAsUser values that may be set.
                          type: string
                      required:
                      - rule
                      type: object
                    type: array
                  runtimeClass:
                    description: runtimeClass is the strategy that will dictate the
                      allowable RuntimeClasses for a pod. If this field is omitted,
                      the pod's runtimeClassName field is unrestricted. Enforcement
                      of this field depends on the RuntimeClass feature gate being
                      enabled.
                    items:
                      properties:
                        allowedRuntimeClassNames:
                          description: allowedRuntimeClassNames is a whitelist of
                            RuntimeClass names that may be specified on a pod. A value
                            of "*" means that any RuntimeClass name is allowed, and
                            must be the only item in the list. An empty list requires
                            the RuntimeClassName field to be unset.
                          items:
                            type: string
                          type: array
                        defaultRuntimeClassName:
                          description: defaultRuntimeClassName is the default RuntimeClassName
                            to set on the pod. The default MUST be allowed by the
                            allowedRuntimeClassNames list. A value of nil does not
                            mutate the Pod.
                          type: string
                      required:
                      - allowedRuntimeClassNames
                      type: object
                    type: array
                  seLinux:
                    description: seLinux is the strategy that will dictate the allowable
                      labels that may be set.
                    items:
                      properties:
                        rule:
                          description: rule is the strategy that will dictate the
                            allowable labels that may be set.
                          type: string
                        seLinuxOption:
                          description: 'seLinuxOptions required to run as; required
                            for MustRunAs. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          items:
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          type: array
                      required:
                      - rule
                      type: object
                    type: array
                  supplementalGroup:
                    description: supplementalGroups is the strategy that will dictate
                      what supplemental groups are used by the SecurityContext.
                    items:
                      properties:
                        range:
                          description: ranges are the allowed ranges of supplemental
                            groups.  If you would like to force a single supplemental
                            group then supply a single range with the same start and
                            end. Required for MustRunAs.
                          items:
                            properties:
                              max:
                                description: max is the end of the range, inclusive.
                                type: number
                              min:
                                description: min is the start of the range, inclusive.
                                type: number
                            required:
                            - max
                            - min
                            type: object
                          type: array
                        rule:
                          description: rule is the strategy that will dictate what
                            supplemental groups is used in the SecurityContext.
                          type: string
                      type: object
                    type: array
                  volumes:
                    description: volumes is a white list of allowed volume plugins.
                      Empty indicates that no volumes may be used. To allow all volumes
                      you may use '*'
                    items:
                      type: string
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SecurityPolicyTemplateStatus defines the observed state of
              SecurityPolicyTemplate.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
