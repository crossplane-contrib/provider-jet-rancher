---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterapps.multi.rancher.jet.crossplane.io
spec:
  group: multi.rancher.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - rancherjet
    kind: ClusterApp
    listKind: ClusterAppList
    plural: clusterapps
    singular: clusterapp
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterApp is the Schema for the ClusterApps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAppSpec defines the desired state of ClusterApp
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations of the resource
                    type: object
                  answers:
                    description: Multi cluster app answers
                    items:
                      properties:
                        clusterId:
                          description: Cluster ID for answer
                          type: string
                        projectId:
                          description: Project ID for answer
                          type: string
                        values:
                          additionalProperties:
                            type: string
                          description: Key/values for answer
                          type: object
                      type: object
                    type: array
                  catalogName:
                    description: Multi cluster app catalog name
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels of the resource
                    type: object
                  members:
                    description: Multi cluster app members
                    items:
                      properties:
                        accessType:
                          description: 'Member access type: member, owner, read-only'
                          type: string
                        groupPrincipalId:
                          description: Member group principal id
                          type: string
                        userPrincipalId:
                          description: Member user principal id
                          type: string
                      type: object
                    type: array
                  revisionHistoryLimit:
                    description: Multi cluster app revision history limit
                    type: number
                  revisionId:
                    description: Multi cluster app revision name
                    type: string
                  roles:
                    description: Multi cluster app roles
                    items:
                      type: string
                    type: array
                  targets:
                    description: Multi cluster app targets
                    items:
                      properties:
                        projectId:
                          description: Project ID for target
                          type: string
                      required:
                      - projectId
                      type: object
                    type: array
                  templateName:
                    description: Multi cluster app template name
                    type: string
                  templateVersion:
                    description: Multi cluster app template version
                    type: string
                  upgradeStrategy:
                    description: Multi cluster app upgrade strategy
                    items:
                      properties:
                        rollingUpdate:
                          description: Rolling update for upgrade strategy
                          items:
                            properties:
                              batchSize:
                                description: Rolling update batch size
                                type: number
                              interval:
                                description: Rolling update interval
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  wait:
                    description: Wait until multi cluster app is active
                    type: boolean
                required:
                - catalogName
                - roles
                - targets
                - templateName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterAppStatus defines the observed state of ClusterApp.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  templateVersionId:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
