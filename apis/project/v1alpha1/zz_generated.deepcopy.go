//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroup) DeepCopyInto(out *AlertGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroup.
func (in *AlertGroup) DeepCopy() *AlertGroup {
	if in == nil {
		return nil
	}
	out := new(AlertGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupList) DeepCopyInto(out *AlertGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupList.
func (in *AlertGroupList) DeepCopy() *AlertGroupList {
	if in == nil {
		return nil
	}
	out := new(AlertGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupObservation) DeepCopyInto(out *AlertGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupObservation.
func (in *AlertGroupObservation) DeepCopy() *AlertGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AlertGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupParameters) DeepCopyInto(out *AlertGroupParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GroupIntervalSeconds != nil {
		in, out := &in.GroupIntervalSeconds, &out.GroupIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupWaitSeconds != nil {
		in, out := &in.GroupWaitSeconds, &out.GroupWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Recipients != nil {
		in, out := &in.Recipients, &out.Recipients
		*out = make([]RecipientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepeatIntervalSeconds != nil {
		in, out := &in.RepeatIntervalSeconds, &out.RepeatIntervalSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupParameters.
func (in *AlertGroupParameters) DeepCopy() *AlertGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AlertGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupSpec) DeepCopyInto(out *AlertGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupSpec.
func (in *AlertGroupSpec) DeepCopy() *AlertGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AlertGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupStatus) DeepCopyInto(out *AlertGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupStatus.
func (in *AlertGroupStatus) DeepCopy() *AlertGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AlertGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRule) DeepCopyInto(out *AlertRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRule.
func (in *AlertRule) DeepCopy() *AlertRule {
	if in == nil {
		return nil
	}
	out := new(AlertRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleList) DeepCopyInto(out *AlertRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleList.
func (in *AlertRuleList) DeepCopy() *AlertRuleList {
	if in == nil {
		return nil
	}
	out := new(AlertRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleObservation) DeepCopyInto(out *AlertRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleObservation.
func (in *AlertRuleObservation) DeepCopy() *AlertRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AlertRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleParameters) DeepCopyInto(out *AlertRuleParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIntervalSeconds != nil {
		in, out := &in.GroupIntervalSeconds, &out.GroupIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupWaitSeconds != nil {
		in, out := &in.GroupWaitSeconds, &out.GroupWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Inherited != nil {
		in, out := &in.Inherited, &out.Inherited
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetricRule != nil {
		in, out := &in.MetricRule, &out.MetricRule
		*out = make([]MetricRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodRule != nil {
		in, out := &in.PodRule, &out.PodRule
		*out = make([]PodRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RepeatIntervalSeconds != nil {
		in, out := &in.RepeatIntervalSeconds, &out.RepeatIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.WorkloadRule != nil {
		in, out := &in.WorkloadRule, &out.WorkloadRule
		*out = make([]WorkloadRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleParameters.
func (in *AlertRuleParameters) DeepCopy() *AlertRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AlertRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleSpec) DeepCopyInto(out *AlertRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleSpec.
func (in *AlertRuleSpec) DeepCopy() *AlertRuleSpec {
	if in == nil {
		return nil
	}
	out := new(AlertRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleStatus) DeepCopyInto(out *AlertRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleStatus.
func (in *AlertRuleStatus) DeepCopy() *AlertRuleStatus {
	if in == nil {
		return nil
	}
	out := new(AlertRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTargetConfigObservation) DeepCopyInto(out *CustomTargetConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTargetConfigObservation.
func (in *CustomTargetConfigObservation) DeepCopy() *CustomTargetConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTargetConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTargetConfigParameters) DeepCopyInto(out *CustomTargetConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTargetConfigParameters.
func (in *CustomTargetConfigParameters) DeepCopy() *CustomTargetConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTargetConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigObservation) DeepCopyInto(out *ElasticsearchConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigObservation.
func (in *ElasticsearchConfigObservation) DeepCopy() *ElasticsearchConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigParameters) DeepCopyInto(out *ElasticsearchConfigParameters) {
	*out = *in
	if in.AuthPasswordSecretRef != nil {
		in, out := &in.AuthPasswordSecretRef, &out.AuthPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AuthUsernameSecretRef != nil {
		in, out := &in.AuthUsernameSecretRef, &out.AuthUsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeyPassSecretRef != nil {
		in, out := &in.ClientKeyPassSecretRef, &out.ClientKeyPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DateFormat != nil {
		in, out := &in.DateFormat, &out.DateFormat
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.IndexPrefix != nil {
		in, out := &in.IndexPrefix, &out.IndexPrefix
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.SSLVersion != nil {
		in, out := &in.SSLVersion, &out.SSLVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigParameters.
func (in *ElasticsearchConfigParameters) DeepCopy() *ElasticsearchConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentServersObservation) DeepCopyInto(out *FluentServersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentServersObservation.
func (in *FluentServersObservation) DeepCopy() *FluentServersObservation {
	if in == nil {
		return nil
	}
	out := new(FluentServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentServersParameters) DeepCopyInto(out *FluentServersParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SharedKeySecretRef != nil {
		in, out := &in.SharedKeySecretRef, &out.SharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Standby != nil {
		in, out := &in.Standby, &out.Standby
		*out = new(bool)
		**out = **in
	}
	if in.UsernameSecretRef != nil {
		in, out := &in.UsernameSecretRef, &out.UsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentServersParameters.
func (in *FluentServersParameters) DeepCopy() *FluentServersParameters {
	if in == nil {
		return nil
	}
	out := new(FluentServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentdConfigObservation) DeepCopyInto(out *FluentdConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentdConfigObservation.
func (in *FluentdConfigObservation) DeepCopy() *FluentdConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FluentdConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentdConfigParameters) DeepCopyInto(out *FluentdConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.FluentServers != nil {
		in, out := &in.FluentServers, &out.FluentServers
		*out = make([]FluentServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentdConfigParameters.
func (in *FluentdConfigParameters) DeepCopy() *FluentdConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FluentdConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConfigObservation) DeepCopyInto(out *KafkaConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConfigObservation.
func (in *KafkaConfigObservation) DeepCopy() *KafkaConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConfigParameters) DeepCopyInto(out *KafkaConfigParameters) {
	*out = *in
	if in.BrokerEndpoints != nil {
		in, out := &in.BrokerEndpoints, &out.BrokerEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.ZookeeperEndpoint != nil {
		in, out := &in.ZookeeperEndpoint, &out.ZookeeperEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConfigParameters.
func (in *KafkaConfigParameters) DeepCopy() *KafkaConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Logging) DeepCopyInto(out *Logging) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Logging.
func (in *Logging) DeepCopy() *Logging {
	if in == nil {
		return nil
	}
	out := new(Logging)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Logging) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingList) DeepCopyInto(out *LoggingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Logging, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingList.
func (in *LoggingList) DeepCopy() *LoggingList {
	if in == nil {
		return nil
	}
	out := new(LoggingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomTargetConfig != nil {
		in, out := &in.CustomTargetConfig, &out.CustomTargetConfig
		*out = make([]CustomTargetConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConfig != nil {
		in, out := &in.ElasticsearchConfig, &out.ElasticsearchConfig
		*out = make([]ElasticsearchConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableJSONParsing != nil {
		in, out := &in.EnableJSONParsing, &out.EnableJSONParsing
		*out = new(bool)
		**out = **in
	}
	if in.FluentdConfig != nil {
		in, out := &in.FluentdConfig, &out.FluentdConfig
		*out = make([]FluentdConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaConfig != nil {
		in, out := &in.KafkaConfig, &out.KafkaConfig
		*out = make([]KafkaConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.OutputFlushInterval != nil {
		in, out := &in.OutputFlushInterval, &out.OutputFlushInterval
		*out = new(float64)
		**out = **in
	}
	if in.OutputTags != nil {
		in, out := &in.OutputTags, &out.OutputTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.SplunkConfig != nil {
		in, out := &in.SplunkConfig, &out.SplunkConfig
		*out = make([]SplunkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SyslogConfig != nil {
		in, out := &in.SyslogConfig, &out.SyslogConfig
		*out = make([]SyslogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingSpec) DeepCopyInto(out *LoggingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingSpec.
func (in *LoggingSpec) DeepCopy() *LoggingSpec {
	if in == nil {
		return nil
	}
	out := new(LoggingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingStatus) DeepCopyInto(out *LoggingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingStatus.
func (in *LoggingStatus) DeepCopy() *LoggingStatus {
	if in == nil {
		return nil
	}
	out := new(LoggingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRuleObservation) DeepCopyInto(out *MetricRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRuleObservation.
func (in *MetricRuleObservation) DeepCopy() *MetricRuleObservation {
	if in == nil {
		return nil
	}
	out := new(MetricRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRuleParameters) DeepCopyInto(out *MetricRuleParameters) {
	*out = *in
	if in.Comparison != nil {
		in, out := &in.Comparison, &out.Comparison
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.ThresholdValue != nil {
		in, out := &in.ThresholdValue, &out.ThresholdValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRuleParameters.
func (in *MetricRuleParameters) DeepCopy() *MetricRuleParameters {
	if in == nil {
		return nil
	}
	out := new(MetricRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodRuleObservation) DeepCopyInto(out *PodRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodRuleObservation.
func (in *PodRuleObservation) DeepCopy() *PodRuleObservation {
	if in == nil {
		return nil
	}
	out := new(PodRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodRuleParameters) DeepCopyInto(out *PodRuleParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.PodID != nil {
		in, out := &in.PodID, &out.PodID
		*out = new(string)
		**out = **in
	}
	if in.RestartIntervalSeconds != nil {
		in, out := &in.RestartIntervalSeconds, &out.RestartIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.RestartTimes != nil {
		in, out := &in.RestartTimes, &out.RestartTimes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodRuleParameters.
func (in *PodRuleParameters) DeepCopy() *PodRuleParameters {
	if in == nil {
		return nil
	}
	out := new(PodRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientsObservation) DeepCopyInto(out *RecipientsObservation) {
	*out = *in
	if in.NotifierType != nil {
		in, out := &in.NotifierType, &out.NotifierType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientsObservation.
func (in *RecipientsObservation) DeepCopy() *RecipientsObservation {
	if in == nil {
		return nil
	}
	out := new(RecipientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientsParameters) DeepCopyInto(out *RecipientsParameters) {
	*out = *in
	if in.DefaultRecipient != nil {
		in, out := &in.DefaultRecipient, &out.DefaultRecipient
		*out = new(bool)
		**out = **in
	}
	if in.NotifierID != nil {
		in, out := &in.NotifierID, &out.NotifierID
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientsParameters.
func (in *RecipientsParameters) DeepCopy() *RecipientsParameters {
	if in == nil {
		return nil
	}
	out := new(RecipientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBinding) DeepCopyInto(out *RoleTemplateBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBinding.
func (in *RoleTemplateBinding) DeepCopy() *RoleTemplateBinding {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplateBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingList) DeepCopyInto(out *RoleTemplateBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RoleTemplateBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingList.
func (in *RoleTemplateBindingList) DeepCopy() *RoleTemplateBindingList {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplateBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingObservation) DeepCopyInto(out *RoleTemplateBindingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingObservation.
func (in *RoleTemplateBindingObservation) DeepCopy() *RoleTemplateBindingObservation {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingParameters) DeepCopyInto(out *RoleTemplateBindingParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupPrincipalID != nil {
		in, out := &in.GroupPrincipalID, &out.GroupPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoleTemplateID != nil {
		in, out := &in.RoleTemplateID, &out.RoleTemplateID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserPrincipalID != nil {
		in, out := &in.UserPrincipalID, &out.UserPrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingParameters.
func (in *RoleTemplateBindingParameters) DeepCopy() *RoleTemplateBindingParameters {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingSpec) DeepCopyInto(out *RoleTemplateBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingSpec.
func (in *RoleTemplateBindingSpec) DeepCopy() *RoleTemplateBindingSpec {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingStatus) DeepCopyInto(out *RoleTemplateBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingStatus.
func (in *RoleTemplateBindingStatus) DeepCopy() *RoleTemplateBindingStatus {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigObservation) DeepCopyInto(out *SplunkConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigObservation.
func (in *SplunkConfigObservation) DeepCopy() *SplunkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigParameters) DeepCopyInto(out *SplunkConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeyPassSecretRef != nil {
		in, out := &in.ClientKeyPassSecretRef, &out.ClientKeyPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigParameters.
func (in *SplunkConfigParameters) DeepCopy() *SplunkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogConfigObservation) DeepCopyInto(out *SyslogConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogConfigObservation.
func (in *SyslogConfigObservation) DeepCopy() *SyslogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SyslogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogConfigParameters) DeepCopyInto(out *SyslogConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Program != nil {
		in, out := &in.Program, &out.Program
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogConfigParameters.
func (in *SyslogConfigParameters) DeepCopy() *SyslogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SyslogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadRuleObservation) DeepCopyInto(out *WorkloadRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadRuleObservation.
func (in *WorkloadRuleObservation) DeepCopy() *WorkloadRuleObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadRuleParameters) DeepCopyInto(out *WorkloadRuleParameters) {
	*out = *in
	if in.AvailablePercentage != nil {
		in, out := &in.AvailablePercentage, &out.AvailablePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkloadID != nil {
		in, out := &in.WorkloadID, &out.WorkloadID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadRuleParameters.
func (in *WorkloadRuleParameters) DeepCopy() *WorkloadRuleParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadRuleParameters)
	in.DeepCopyInto(out)
	return out
}
