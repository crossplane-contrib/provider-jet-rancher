//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentEnvVarsObservation) DeepCopyInto(out *AgentEnvVarsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentEnvVarsObservation.
func (in *AgentEnvVarsObservation) DeepCopy() *AgentEnvVarsObservation {
	if in == nil {
		return nil
	}
	out := new(AgentEnvVarsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentEnvVarsParameters) DeepCopyInto(out *AgentEnvVarsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentEnvVarsParameters.
func (in *AgentEnvVarsParameters) DeepCopy() *AgentEnvVarsParameters {
	if in == nil {
		return nil
	}
	out := new(AgentEnvVarsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ClusterV1ID != nil {
		in, out := &in.ClusterV1ID, &out.ClusterV1ID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AgentEnvVars != nil {
		in, out := &in.AgentEnvVars, &out.AgentEnvVars
		*out = make([]AgentEnvVarsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CloudCredentialSecretName != nil {
		in, out := &in.CloudCredentialSecretName, &out.CloudCredentialSecretName
		*out = new(string)
		**out = **in
	}
	if in.DefaultClusterRoleForProjectMembers != nil {
		in, out := &in.DefaultClusterRoleForProjectMembers, &out.DefaultClusterRoleForProjectMembers
		*out = new(string)
		**out = **in
	}
	if in.DefaultPodSecurityPolicyTemplateName != nil {
		in, out := &in.DefaultPodSecurityPolicyTemplateName, &out.DefaultPodSecurityPolicyTemplateName
		*out = new(string)
		**out = **in
	}
	if in.EnableNetworkPolicy != nil {
		in, out := &in.EnableNetworkPolicy, &out.EnableNetworkPolicy
		*out = new(bool)
		**out = **in
	}
	if in.FleetNamespace != nil {
		in, out := &in.FleetNamespace, &out.FleetNamespace
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LocalAuthEndpoint != nil {
		in, out := &in.LocalAuthEndpoint, &out.LocalAuthEndpoint
		*out = make([]LocalAuthEndpointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RkeConfig != nil {
		in, out := &in.RkeConfig, &out.RkeConfig
		*out = make([]RkeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationTokenObservation) DeepCopyInto(out *ClusterRegistrationTokenObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsecureCommand != nil {
		in, out := &in.InsecureCommand, &out.InsecureCommand
		*out = new(string)
		**out = **in
	}
	if in.InsecureNodeCommand != nil {
		in, out := &in.InsecureNodeCommand, &out.InsecureNodeCommand
		*out = new(string)
		**out = **in
	}
	if in.InsecureWindowsNodeCommand != nil {
		in, out := &in.InsecureWindowsNodeCommand, &out.InsecureWindowsNodeCommand
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ManifestURL != nil {
		in, out := &in.ManifestURL, &out.ManifestURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeCommand != nil {
		in, out := &in.NodeCommand, &out.NodeCommand
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.WindowsNodeCommand != nil {
		in, out := &in.WindowsNodeCommand, &out.WindowsNodeCommand
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationTokenObservation.
func (in *ClusterRegistrationTokenObservation) DeepCopy() *ClusterRegistrationTokenObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationTokenParameters) DeepCopyInto(out *ClusterRegistrationTokenParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationTokenParameters.
func (in *ClusterRegistrationTokenParameters) DeepCopy() *ClusterRegistrationTokenParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigsObservation) DeepCopyInto(out *ConfigsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigsObservation.
func (in *ConfigsObservation) DeepCopy() *ConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigsParameters) DeepCopyInto(out *ConfigsParameters) {
	*out = *in
	if in.AuthConfigSecretName != nil {
		in, out := &in.AuthConfigSecretName, &out.AuthConfigSecretName
		*out = new(string)
		**out = **in
	}
	if in.CABundle != nil {
		in, out := &in.CABundle, &out.CABundle
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.TLSSecretName != nil {
		in, out := &in.TLSSecretName, &out.TLSSecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigsParameters.
func (in *ConfigsParameters) DeepCopy() *ConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneDrainOptionsObservation) DeepCopyInto(out *ControlPlaneDrainOptionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneDrainOptionsObservation.
func (in *ControlPlaneDrainOptionsObservation) DeepCopy() *ControlPlaneDrainOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneDrainOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneDrainOptionsParameters) DeepCopyInto(out *ControlPlaneDrainOptionsParameters) {
	*out = *in
	if in.DeleteEmptyDirData != nil {
		in, out := &in.DeleteEmptyDirData, &out.DeleteEmptyDirData
		*out = new(bool)
		**out = **in
	}
	if in.DisableEviction != nil {
		in, out := &in.DisableEviction, &out.DisableEviction
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDaemonSets != nil {
		in, out := &in.IgnoreDaemonSets, &out.IgnoreDaemonSets
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreErrors != nil {
		in, out := &in.IgnoreErrors, &out.IgnoreErrors
		*out = new(bool)
		**out = **in
	}
	if in.SkipWaitForDeleteTimeoutSeconds != nil {
		in, out := &in.SkipWaitForDeleteTimeoutSeconds, &out.SkipWaitForDeleteTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneDrainOptionsParameters.
func (in *ControlPlaneDrainOptionsParameters) DeepCopy() *ControlPlaneDrainOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneDrainOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdObservation) DeepCopyInto(out *EtcdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdObservation.
func (in *EtcdObservation) DeepCopy() *EtcdObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdParameters) DeepCopyInto(out *EtcdParameters) {
	*out = *in
	if in.DisableSnapshots != nil {
		in, out := &in.DisableSnapshots, &out.DisableSnapshots
		*out = new(bool)
		**out = **in
	}
	if in.S3Config != nil {
		in, out := &in.S3Config, &out.S3Config
		*out = make([]S3ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotRetention != nil {
		in, out := &in.SnapshotRetention, &out.SnapshotRetention
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotScheduleCron != nil {
		in, out := &in.SnapshotScheduleCron, &out.SnapshotScheduleCron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdParameters.
func (in *EtcdParameters) DeepCopy() *EtcdParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdSnapshotCreateObservation) DeepCopyInto(out *EtcdSnapshotCreateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdSnapshotCreateObservation.
func (in *EtcdSnapshotCreateObservation) DeepCopy() *EtcdSnapshotCreateObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdSnapshotCreateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdSnapshotCreateParameters) DeepCopyInto(out *EtcdSnapshotCreateParameters) {
	*out = *in
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdSnapshotCreateParameters.
func (in *EtcdSnapshotCreateParameters) DeepCopy() *EtcdSnapshotCreateParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdSnapshotCreateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdSnapshotRestoreObservation) DeepCopyInto(out *EtcdSnapshotRestoreObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdSnapshotRestoreObservation.
func (in *EtcdSnapshotRestoreObservation) DeepCopy() *EtcdSnapshotRestoreObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdSnapshotRestoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdSnapshotRestoreParameters) DeepCopyInto(out *EtcdSnapshotRestoreParameters) {
	*out = *in
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RestoreRkeConfig != nil {
		in, out := &in.RestoreRkeConfig, &out.RestoreRkeConfig
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdSnapshotRestoreParameters.
func (in *EtcdSnapshotRestoreParameters) DeepCopy() *EtcdSnapshotRestoreParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdSnapshotRestoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalAuthEndpointObservation) DeepCopyInto(out *LocalAuthEndpointObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalAuthEndpointObservation.
func (in *LocalAuthEndpointObservation) DeepCopy() *LocalAuthEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(LocalAuthEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalAuthEndpointParameters) DeepCopyInto(out *LocalAuthEndpointParameters) {
	*out = *in
	if in.CACerts != nil {
		in, out := &in.CACerts, &out.CACerts
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalAuthEndpointParameters.
func (in *LocalAuthEndpointParameters) DeepCopy() *LocalAuthEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(LocalAuthEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfigObservation) DeepCopyInto(out *MachineConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfigObservation.
func (in *MachineConfigObservation) DeepCopy() *MachineConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MachineConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfigParameters) DeepCopyInto(out *MachineConfigParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfigParameters.
func (in *MachineConfigParameters) DeepCopy() *MachineConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MachineConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineLabelSelectorObservation) DeepCopyInto(out *MachineLabelSelectorObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineLabelSelectorObservation.
func (in *MachineLabelSelectorObservation) DeepCopy() *MachineLabelSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(MachineLabelSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineLabelSelectorParameters) DeepCopyInto(out *MachineLabelSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineLabelSelectorParameters.
func (in *MachineLabelSelectorParameters) DeepCopy() *MachineLabelSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(MachineLabelSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolsObservation) DeepCopyInto(out *MachinePoolsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolsObservation.
func (in *MachinePoolsObservation) DeepCopy() *MachinePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolsParameters) DeepCopyInto(out *MachinePoolsParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CloudCredentialSecretName != nil {
		in, out := &in.CloudCredentialSecretName, &out.CloudCredentialSecretName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneRole != nil {
		in, out := &in.ControlPlaneRole, &out.ControlPlaneRole
		*out = new(bool)
		**out = **in
	}
	if in.DrainBeforeDelete != nil {
		in, out := &in.DrainBeforeDelete, &out.DrainBeforeDelete
		*out = new(bool)
		**out = **in
	}
	if in.EtcdRole != nil {
		in, out := &in.EtcdRole, &out.EtcdRole
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineConfig != nil {
		in, out := &in.MachineConfig, &out.MachineConfig
		*out = make([]MachineConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnhealthy != nil {
		in, out := &in.MaxUnhealthy, &out.MaxUnhealthy
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeDrainTimeout != nil {
		in, out := &in.NodeDrainTimeout, &out.NodeDrainTimeout
		*out = new(float64)
		**out = **in
	}
	if in.NodeStartupTimeoutSeconds != nil {
		in, out := &in.NodeStartupTimeoutSeconds, &out.NodeStartupTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(float64)
		**out = **in
	}
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]RollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnhealthyNodeTimeoutSeconds != nil {
		in, out := &in.UnhealthyNodeTimeoutSeconds, &out.UnhealthyNodeTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyRange != nil {
		in, out := &in.UnhealthyRange, &out.UnhealthyRange
		*out = new(string)
		**out = **in
	}
	if in.WorkerRole != nil {
		in, out := &in.WorkerRole, &out.WorkerRole
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolsParameters.
func (in *MachinePoolsParameters) DeepCopy() *MachinePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineSelectorConfigObservation) DeepCopyInto(out *MachineSelectorConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineSelectorConfigObservation.
func (in *MachineSelectorConfigObservation) DeepCopy() *MachineSelectorConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MachineSelectorConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineSelectorConfigParameters) DeepCopyInto(out *MachineSelectorConfigParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineLabelSelector != nil {
		in, out := &in.MachineLabelSelector, &out.MachineLabelSelector
		*out = make([]MachineLabelSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineSelectorConfigParameters.
func (in *MachineSelectorConfigParameters) DeepCopy() *MachineSelectorConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MachineSelectorConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsObservation) DeepCopyInto(out *MatchExpressionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsObservation.
func (in *MatchExpressionsObservation) DeepCopy() *MatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsParameters) DeepCopyInto(out *MatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsParameters.
func (in *MatchExpressionsParameters) DeepCopy() *MatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorsObservation) DeepCopyInto(out *MirrorsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorsObservation.
func (in *MirrorsObservation) DeepCopy() *MirrorsObservation {
	if in == nil {
		return nil
	}
	out := new(MirrorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorsParameters) DeepCopyInto(out *MirrorsParameters) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Rewrites != nil {
		in, out := &in.Rewrites, &out.Rewrites
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorsParameters.
func (in *MirrorsParameters) DeepCopy() *MirrorsParameters {
	if in == nil {
		return nil
	}
	out := new(MirrorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistriesObservation) DeepCopyInto(out *RegistriesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistriesObservation.
func (in *RegistriesObservation) DeepCopy() *RegistriesObservation {
	if in == nil {
		return nil
	}
	out := new(RegistriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistriesParameters) DeepCopyInto(out *RegistriesParameters) {
	*out = *in
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make([]ConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mirrors != nil {
		in, out := &in.Mirrors, &out.Mirrors
		*out = make([]MirrorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistriesParameters.
func (in *RegistriesParameters) DeepCopy() *RegistriesParameters {
	if in == nil {
		return nil
	}
	out := new(RegistriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigLocalAuthEndpointObservation) DeepCopyInto(out *RkeConfigLocalAuthEndpointObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigLocalAuthEndpointObservation.
func (in *RkeConfigLocalAuthEndpointObservation) DeepCopy() *RkeConfigLocalAuthEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigLocalAuthEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigLocalAuthEndpointParameters) DeepCopyInto(out *RkeConfigLocalAuthEndpointParameters) {
	*out = *in
	if in.CACerts != nil {
		in, out := &in.CACerts, &out.CACerts
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigLocalAuthEndpointParameters.
func (in *RkeConfigLocalAuthEndpointParameters) DeepCopy() *RkeConfigLocalAuthEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigLocalAuthEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigObservation) DeepCopyInto(out *RkeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigObservation.
func (in *RkeConfigObservation) DeepCopy() *RkeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigParameters) DeepCopyInto(out *RkeConfigParameters) {
	*out = *in
	if in.AdditionalManifest != nil {
		in, out := &in.AdditionalManifest, &out.AdditionalManifest
		*out = new(string)
		**out = **in
	}
	if in.ChartValues != nil {
		in, out := &in.ChartValues, &out.ChartValues
		*out = new(string)
		**out = **in
	}
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = make([]EtcdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EtcdSnapshotCreate != nil {
		in, out := &in.EtcdSnapshotCreate, &out.EtcdSnapshotCreate
		*out = make([]EtcdSnapshotCreateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EtcdSnapshotRestore != nil {
		in, out := &in.EtcdSnapshotRestore, &out.EtcdSnapshotRestore
		*out = make([]EtcdSnapshotRestoreParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalAuthEndpoint != nil {
		in, out := &in.LocalAuthEndpoint, &out.LocalAuthEndpoint
		*out = make([]RkeConfigLocalAuthEndpointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineGlobalConfig != nil {
		in, out := &in.MachineGlobalConfig, &out.MachineGlobalConfig
		*out = new(string)
		**out = **in
	}
	if in.MachinePools != nil {
		in, out := &in.MachinePools, &out.MachinePools
		*out = make([]MachinePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineSelectorConfig != nil {
		in, out := &in.MachineSelectorConfig, &out.MachineSelectorConfig
		*out = make([]MachineSelectorConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Registries != nil {
		in, out := &in.Registries, &out.Registries
		*out = make([]RegistriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RotateCertificates != nil {
		in, out := &in.RotateCertificates, &out.RotateCertificates
		*out = make([]RotateCertificatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpgradeStrategy != nil {
		in, out := &in.UpgradeStrategy, &out.UpgradeStrategy
		*out = make([]UpgradeStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigParameters.
func (in *RkeConfigParameters) DeepCopy() *RkeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateObservation) DeepCopyInto(out *RollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateObservation.
func (in *RollingUpdateObservation) DeepCopy() *RollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateParameters) DeepCopyInto(out *RollingUpdateParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateParameters.
func (in *RollingUpdateParameters) DeepCopy() *RollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotateCertificatesObservation) DeepCopyInto(out *RotateCertificatesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotateCertificatesObservation.
func (in *RotateCertificatesObservation) DeepCopy() *RotateCertificatesObservation {
	if in == nil {
		return nil
	}
	out := new(RotateCertificatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotateCertificatesParameters) DeepCopyInto(out *RotateCertificatesParameters) {
	*out = *in
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(float64)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotateCertificatesParameters.
func (in *RotateCertificatesParameters) DeepCopy() *RotateCertificatesParameters {
	if in == nil {
		return nil
	}
	out := new(RotateCertificatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConfigObservation) DeepCopyInto(out *S3ConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConfigObservation.
func (in *S3ConfigObservation) DeepCopy() *S3ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(S3ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConfigParameters) DeepCopyInto(out *S3ConfigParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CloudCredentialName != nil {
		in, out := &in.CloudCredentialName, &out.CloudCredentialName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EndpointCA != nil {
		in, out := &in.EndpointCA, &out.EndpointCA
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SkipSSLVerify != nil {
		in, out := &in.SkipSSLVerify, &out.SkipSSLVerify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConfigParameters.
func (in *S3ConfigParameters) DeepCopy() *S3ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(S3ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyObservation) DeepCopyInto(out *UpgradeStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyObservation.
func (in *UpgradeStrategyObservation) DeepCopy() *UpgradeStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyParameters) DeepCopyInto(out *UpgradeStrategyParameters) {
	*out = *in
	if in.ControlPlaneConcurrency != nil {
		in, out := &in.ControlPlaneConcurrency, &out.ControlPlaneConcurrency
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneDrainOptions != nil {
		in, out := &in.ControlPlaneDrainOptions, &out.ControlPlaneDrainOptions
		*out = make([]ControlPlaneDrainOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerConcurrency != nil {
		in, out := &in.WorkerConcurrency, &out.WorkerConcurrency
		*out = new(string)
		**out = **in
	}
	if in.WorkerDrainOptions != nil {
		in, out := &in.WorkerDrainOptions, &out.WorkerDrainOptions
		*out = make([]WorkerDrainOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyParameters.
func (in *UpgradeStrategyParameters) DeepCopy() *UpgradeStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerDrainOptionsObservation) DeepCopyInto(out *WorkerDrainOptionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerDrainOptionsObservation.
func (in *WorkerDrainOptionsObservation) DeepCopy() *WorkerDrainOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerDrainOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerDrainOptionsParameters) DeepCopyInto(out *WorkerDrainOptionsParameters) {
	*out = *in
	if in.DeleteEmptyDirData != nil {
		in, out := &in.DeleteEmptyDirData, &out.DeleteEmptyDirData
		*out = new(bool)
		**out = **in
	}
	if in.DisableEviction != nil {
		in, out := &in.DisableEviction, &out.DisableEviction
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDaemonSets != nil {
		in, out := &in.IgnoreDaemonSets, &out.IgnoreDaemonSets
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreErrors != nil {
		in, out := &in.IgnoreErrors, &out.IgnoreErrors
		*out = new(bool)
		**out = **in
	}
	if in.SkipWaitForDeleteTimeoutSeconds != nil {
		in, out := &in.SkipWaitForDeleteTimeoutSeconds, &out.SkipWaitForDeleteTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerDrainOptionsParameters.
func (in *WorkerDrainOptionsParameters) DeepCopy() *WorkerDrainOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerDrainOptionsParameters)
	in.DeepCopyInto(out)
	return out
}
