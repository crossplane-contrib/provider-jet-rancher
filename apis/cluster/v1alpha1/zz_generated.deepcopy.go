//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroup) DeepCopyInto(out *AlertGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroup.
func (in *AlertGroup) DeepCopy() *AlertGroup {
	if in == nil {
		return nil
	}
	out := new(AlertGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupList) DeepCopyInto(out *AlertGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupList.
func (in *AlertGroupList) DeepCopy() *AlertGroupList {
	if in == nil {
		return nil
	}
	out := new(AlertGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupObservation) DeepCopyInto(out *AlertGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupObservation.
func (in *AlertGroupObservation) DeepCopy() *AlertGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AlertGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupParameters) DeepCopyInto(out *AlertGroupParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GroupIntervalSeconds != nil {
		in, out := &in.GroupIntervalSeconds, &out.GroupIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupWaitSeconds != nil {
		in, out := &in.GroupWaitSeconds, &out.GroupWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Recipients != nil {
		in, out := &in.Recipients, &out.Recipients
		*out = make([]RecipientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepeatIntervalSeconds != nil {
		in, out := &in.RepeatIntervalSeconds, &out.RepeatIntervalSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupParameters.
func (in *AlertGroupParameters) DeepCopy() *AlertGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AlertGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupSpec) DeepCopyInto(out *AlertGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupSpec.
func (in *AlertGroupSpec) DeepCopy() *AlertGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AlertGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupStatus) DeepCopyInto(out *AlertGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupStatus.
func (in *AlertGroupStatus) DeepCopy() *AlertGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AlertGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRule) DeepCopyInto(out *AlertRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRule.
func (in *AlertRule) DeepCopy() *AlertRule {
	if in == nil {
		return nil
	}
	out := new(AlertRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleList) DeepCopyInto(out *AlertRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleList.
func (in *AlertRuleList) DeepCopy() *AlertRuleList {
	if in == nil {
		return nil
	}
	out := new(AlertRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleObservation) DeepCopyInto(out *AlertRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleObservation.
func (in *AlertRuleObservation) DeepCopy() *AlertRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AlertRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleParameters) DeepCopyInto(out *AlertRuleParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EventRule != nil {
		in, out := &in.EventRule, &out.EventRule
		*out = make([]EventRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIntervalSeconds != nil {
		in, out := &in.GroupIntervalSeconds, &out.GroupIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupWaitSeconds != nil {
		in, out := &in.GroupWaitSeconds, &out.GroupWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Inherited != nil {
		in, out := &in.Inherited, &out.Inherited
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetricRule != nil {
		in, out := &in.MetricRule, &out.MetricRule
		*out = make([]MetricRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRule != nil {
		in, out := &in.NodeRule, &out.NodeRule
		*out = make([]NodeRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepeatIntervalSeconds != nil {
		in, out := &in.RepeatIntervalSeconds, &out.RepeatIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.SystemServiceRule != nil {
		in, out := &in.SystemServiceRule, &out.SystemServiceRule
		*out = make([]SystemServiceRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleParameters.
func (in *AlertRuleParameters) DeepCopy() *AlertRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AlertRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleSpec) DeepCopyInto(out *AlertRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleSpec.
func (in *AlertRuleSpec) DeepCopy() *AlertRuleSpec {
	if in == nil {
		return nil
	}
	out := new(AlertRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleStatus) DeepCopyInto(out *AlertRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleStatus.
func (in *AlertRuleStatus) DeepCopy() *AlertRuleStatus {
	if in == nil {
		return nil
	}
	out := new(AlertRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogObservation) DeepCopyInto(out *AuditLogObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogObservation.
func (in *AuditLogObservation) DeepCopy() *AuditLogObservation {
	if in == nil {
		return nil
	}
	out := new(AuditLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogParameters) DeepCopyInto(out *AuditLogParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogParameters.
func (in *AuditLogParameters) DeepCopy() *AuditLogParameters {
	if in == nil {
		return nil
	}
	out := new(AuditLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationObservation) DeepCopyInto(out *AuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationObservation.
func (in *AuthenticationObservation) DeepCopy() *AuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationParameters) DeepCopyInto(out *AuthenticationParameters) {
	*out = *in
	if in.Sans != nil {
		in, out := &in.Sans, &out.Sans
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationParameters.
func (in *AuthenticationParameters) DeepCopy() *AuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationObservation) DeepCopyInto(out *AuthorizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationObservation.
func (in *AuthorizationObservation) DeepCopy() *AuthorizationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationParameters) DeepCopyInto(out *AuthorizationParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationParameters.
func (in *AuthorizationParameters) DeepCopy() *AuthorizationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderObservation) DeepCopyInto(out *AwsCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderObservation.
func (in *AwsCloudProviderObservation) DeepCopy() *AwsCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderParameters) DeepCopyInto(out *AwsCloudProviderParameters) {
	*out = *in
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]GlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceOverride != nil {
		in, out := &in.ServiceOverride, &out.ServiceOverride
		*out = make([]ServiceOverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderParameters.
func (in *AwsCloudProviderParameters) DeepCopy() *AwsCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudProviderObservation) DeepCopyInto(out *AzureCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudProviderObservation.
func (in *AzureCloudProviderObservation) DeepCopy() *AzureCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AzureCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudProviderParameters) DeepCopyInto(out *AzureCloudProviderParameters) {
	*out = *in
	if in.AadClientCertPasswordSecretRef != nil {
		in, out := &in.AadClientCertPasswordSecretRef, &out.AadClientCertPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AadClientCertPath != nil {
		in, out := &in.AadClientCertPath, &out.AadClientCertPath
		*out = new(string)
		**out = **in
	}
	out.AadClientIDSecretRef = in.AadClientIDSecretRef
	out.AadClientSecretSecretRef = in.AadClientSecretSecretRef
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudProviderBackoff != nil {
		in, out := &in.CloudProviderBackoff, &out.CloudProviderBackoff
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderBackoffDuration != nil {
		in, out := &in.CloudProviderBackoffDuration, &out.CloudProviderBackoffDuration
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffExponent != nil {
		in, out := &in.CloudProviderBackoffExponent, &out.CloudProviderBackoffExponent
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffJitter != nil {
		in, out := &in.CloudProviderBackoffJitter, &out.CloudProviderBackoffJitter
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffRetries != nil {
		in, out := &in.CloudProviderBackoffRetries, &out.CloudProviderBackoffRetries
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimit != nil {
		in, out := &in.CloudProviderRateLimit, &out.CloudProviderRateLimit
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderRateLimitBucket != nil {
		in, out := &in.CloudProviderRateLimitBucket, &out.CloudProviderRateLimitBucket
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimitQPS != nil {
		in, out := &in.CloudProviderRateLimitQPS, &out.CloudProviderRateLimitQPS
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumLoadBalancerRuleCount != nil {
		in, out := &in.MaximumLoadBalancerRuleCount, &out.MaximumLoadBalancerRuleCount
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryAvailabilitySetName != nil {
		in, out := &in.PrimaryAvailabilitySetName, &out.PrimaryAvailabilitySetName
		*out = new(string)
		**out = **in
	}
	if in.PrimaryScaleSetName != nil {
		in, out := &in.PrimaryScaleSetName, &out.PrimaryScaleSetName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.RouteTableName != nil {
		in, out := &in.RouteTableName, &out.RouteTableName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	out.SubscriptionIDSecretRef = in.SubscriptionIDSecretRef
	out.TenantIDSecretRef = in.TenantIDSecretRef
	if in.UseInstanceMetadata != nil {
		in, out := &in.UseInstanceMetadata, &out.UseInstanceMetadata
		*out = new(bool)
		**out = **in
	}
	if in.UseManagedIdentityExtension != nil {
		in, out := &in.UseManagedIdentityExtension, &out.UseManagedIdentityExtension
		*out = new(bool)
		**out = **in
	}
	if in.VMType != nil {
		in, out := &in.VMType, &out.VMType
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudProviderParameters.
func (in *AzureCloudProviderParameters) DeepCopy() *AzureCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigObservation) DeepCopyInto(out *BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigObservation.
func (in *BackupConfigObservation) DeepCopy() *BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigParameters) DeepCopyInto(out *BackupConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IntervalHours != nil {
		in, out := &in.IntervalHours, &out.IntervalHours
		*out = new(float64)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupConfig != nil {
		in, out := &in.S3BackupConfig, &out.S3BackupConfig
		*out = make([]S3BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SafeTimestamp != nil {
		in, out := &in.SafeTimestamp, &out.SafeTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigParameters.
func (in *BackupConfigParameters) DeepCopy() *BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigS3BackupConfigObservation) DeepCopyInto(out *BackupConfigS3BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigS3BackupConfigObservation.
func (in *BackupConfigS3BackupConfigObservation) DeepCopy() *BackupConfigS3BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BackupConfigS3BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigS3BackupConfigParameters) DeepCopyInto(out *BackupConfigS3BackupConfigParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CustomCA != nil {
		in, out := &in.CustomCA, &out.CustomCA
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigS3BackupConfigParameters.
func (in *BackupConfigS3BackupConfigParameters) DeepCopy() *BackupConfigS3BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigS3BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostObservation) DeepCopyInto(out *BastionHostObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostObservation.
func (in *BastionHostObservation) DeepCopy() *BastionHostObservation {
	if in == nil {
		return nil
	}
	out := new(BastionHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostParameters) DeepCopyInto(out *BastionHostParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostParameters.
func (in *BastionHostParameters) DeepCopy() *BastionHostParameters {
	if in == nil {
		return nil
	}
	out := new(BastionHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageObservation) DeepCopyInto(out *BlockStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageObservation.
func (in *BlockStorageObservation) DeepCopy() *BlockStorageObservation {
	if in == nil {
		return nil
	}
	out := new(BlockStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageParameters) DeepCopyInto(out *BlockStorageParameters) {
	*out = *in
	if in.BsVersion != nil {
		in, out := &in.BsVersion, &out.BsVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVolumeAz != nil {
		in, out := &in.IgnoreVolumeAz, &out.IgnoreVolumeAz
		*out = new(bool)
		**out = **in
	}
	if in.TrustDevicePath != nil {
		in, out := &in.TrustDevicePath, &out.TrustDevicePath
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageParameters.
func (in *BlockStorageParameters) DeepCopy() *BlockStorageParameters {
	if in == nil {
		return nil
	}
	out := new(BlockStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CalicoNetworkProviderObservation) DeepCopyInto(out *CalicoNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CalicoNetworkProviderObservation.
func (in *CalicoNetworkProviderObservation) DeepCopy() *CalicoNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CalicoNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CalicoNetworkProviderParameters) DeepCopyInto(out *CalicoNetworkProviderParameters) {
	*out = *in
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CalicoNetworkProviderParameters.
func (in *CalicoNetworkProviderParameters) DeepCopy() *CalicoNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CalicoNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanalNetworkProviderObservation) DeepCopyInto(out *CanalNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanalNetworkProviderObservation.
func (in *CanalNetworkProviderObservation) DeepCopy() *CanalNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CanalNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanalNetworkProviderParameters) DeepCopyInto(out *CanalNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanalNetworkProviderParameters.
func (in *CanalNetworkProviderParameters) DeepCopy() *CanalNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CanalNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CisScanConfigObservation) DeepCopyInto(out *CisScanConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CisScanConfigObservation.
func (in *CisScanConfigObservation) DeepCopy() *CisScanConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CisScanConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CisScanConfigParameters) DeepCopyInto(out *CisScanConfigParameters) {
	*out = *in
	if in.DebugMaster != nil {
		in, out := &in.DebugMaster, &out.DebugMaster
		*out = new(bool)
		**out = **in
	}
	if in.DebugWorker != nil {
		in, out := &in.DebugWorker, &out.DebugWorker
		*out = new(bool)
		**out = **in
	}
	if in.OverrideBenchmarkVersion != nil {
		in, out := &in.OverrideBenchmarkVersion, &out.OverrideBenchmarkVersion
		*out = new(string)
		**out = **in
	}
	if in.OverrideSkip != nil {
		in, out := &in.OverrideSkip, &out.OverrideSkip
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CisScanConfigParameters.
func (in *CisScanConfigParameters) DeepCopy() *CisScanConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CisScanConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderObservation) DeepCopyInto(out *CloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderObservation.
func (in *CloudProviderObservation) DeepCopy() *CloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderParameters) DeepCopyInto(out *CloudProviderParameters) {
	*out = *in
	if in.AwsCloudProvider != nil {
		in, out := &in.AwsCloudProvider, &out.AwsCloudProvider
		*out = make([]AwsCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureCloudProvider != nil {
		in, out := &in.AzureCloudProvider, &out.AzureCloudProvider
		*out = make([]AzureCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomCloudProvider != nil {
		in, out := &in.CustomCloudProvider, &out.CustomCloudProvider
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenstackCloudProvider != nil {
		in, out := &in.OpenstackCloudProvider, &out.OpenstackCloudProvider
		*out = make([]OpenstackCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsphereCloudProvider != nil {
		in, out := &in.VsphereCloudProvider, &out.VsphereCloudProvider
		*out = make([]VsphereCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderParameters.
func (in *CloudProviderParameters) DeepCopy() *CloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAuthEndpointObservation) DeepCopyInto(out *ClusterAuthEndpointObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAuthEndpointObservation.
func (in *ClusterAuthEndpointObservation) DeepCopy() *ClusterAuthEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAuthEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAuthEndpointParameters) DeepCopyInto(out *ClusterAuthEndpointParameters) {
	*out = *in
	if in.CACerts != nil {
		in, out := &in.CACerts, &out.CACerts
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAuthEndpointParameters.
func (in *ClusterAuthEndpointParameters) DeepCopy() *ClusterAuthEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAuthEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigObservation) DeepCopyInto(out *ClusterConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigObservation.
func (in *ClusterConfigObservation) DeepCopy() *ClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigParameters) DeepCopyInto(out *ClusterConfigParameters) {
	*out = *in
	if in.ClusterAuthEndpoint != nil {
		in, out := &in.ClusterAuthEndpoint, &out.ClusterAuthEndpoint
		*out = make([]ClusterAuthEndpointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultClusterRoleForProjectMembers != nil {
		in, out := &in.DefaultClusterRoleForProjectMembers, &out.DefaultClusterRoleForProjectMembers
		*out = new(string)
		**out = **in
	}
	if in.DefaultPodSecurityPolicyTemplateID != nil {
		in, out := &in.DefaultPodSecurityPolicyTemplateID, &out.DefaultPodSecurityPolicyTemplateID
		*out = new(string)
		**out = **in
	}
	if in.DesiredAgentImage != nil {
		in, out := &in.DesiredAgentImage, &out.DesiredAgentImage
		*out = new(string)
		**out = **in
	}
	if in.DesiredAuthImage != nil {
		in, out := &in.DesiredAuthImage, &out.DesiredAuthImage
		*out = new(string)
		**out = **in
	}
	if in.DockerRootDir != nil {
		in, out := &in.DockerRootDir, &out.DockerRootDir
		*out = new(string)
		**out = **in
	}
	if in.EnableClusterAlerting != nil {
		in, out := &in.EnableClusterAlerting, &out.EnableClusterAlerting
		*out = new(bool)
		**out = **in
	}
	if in.EnableClusterMonitoring != nil {
		in, out := &in.EnableClusterMonitoring, &out.EnableClusterMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkPolicy != nil {
		in, out := &in.EnableNetworkPolicy, &out.EnableNetworkPolicy
		*out = new(bool)
		**out = **in
	}
	if in.RkeConfig != nil {
		in, out := &in.RkeConfig, &out.RkeConfig
		*out = make([]RkeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScheduledClusterScan != nil {
		in, out := &in.ScheduledClusterScan, &out.ScheduledClusterScan
		*out = make([]ScheduledClusterScanParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsPreferedCluster != nil {
		in, out := &in.WindowsPreferedCluster, &out.WindowsPreferedCluster
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigParameters.
func (in *ClusterConfigParameters) DeepCopy() *ClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMap) DeepCopyInto(out *ConfigMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMap.
func (in *ConfigMap) DeepCopy() *ConfigMap {
	if in == nil {
		return nil
	}
	out := new(ConfigMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapList) DeepCopyInto(out *ConfigMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConfigMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapList.
func (in *ConfigMapList) DeepCopy() *ConfigMapList {
	if in == nil {
		return nil
	}
	out := new(ConfigMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapObservation) DeepCopyInto(out *ConfigMapObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapObservation.
func (in *ConfigMapObservation) DeepCopy() *ConfigMapObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapParameters) DeepCopyInto(out *ConfigMapParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapParameters.
func (in *ConfigMapParameters) DeepCopy() *ConfigMapParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapSpec) DeepCopyInto(out *ConfigMapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapSpec.
func (in *ConfigMapSpec) DeepCopy() *ConfigMapSpec {
	if in == nil {
		return nil
	}
	out := new(ConfigMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapStatus) DeepCopyInto(out *ConfigMapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapStatus.
func (in *ConfigMapStatus) DeepCopy() *ConfigMapStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackup != nil {
		in, out := &in.MaxBackup, &out.MaxBackup
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTargetConfigObservation) DeepCopyInto(out *CustomTargetConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTargetConfigObservation.
func (in *CustomTargetConfigObservation) DeepCopy() *CustomTargetConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTargetConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTargetConfigParameters) DeepCopyInto(out *CustomTargetConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTargetConfigParameters.
func (in *CustomTargetConfigParameters) DeepCopy() *CustomTargetConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTargetConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSObservation) DeepCopyInto(out *DNSObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSObservation.
func (in *DNSObservation) DeepCopy() *DNSObservation {
	if in == nil {
		return nil
	}
	out := new(DNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSParameters) DeepCopyInto(out *DNSParameters) {
	*out = *in
	if in.LinearAutoscalerParams != nil {
		in, out := &in.LinearAutoscalerParams, &out.LinearAutoscalerParams
		*out = make([]LinearAutoscalerParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Nodelocal != nil {
		in, out := &in.Nodelocal, &out.Nodelocal
		*out = make([]NodelocalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.ReverseCidrs != nil {
		in, out := &in.ReverseCidrs, &out.ReverseCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]TolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]UpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpstreamNameservers != nil {
		in, out := &in.UpstreamNameservers, &out.UpstreamNameservers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSParameters.
func (in *DNSParameters) DeepCopy() *DNSParameters {
	if in == nil {
		return nil
	}
	out := new(DNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DingtalkConfigObservation) DeepCopyInto(out *DingtalkConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DingtalkConfigObservation.
func (in *DingtalkConfigObservation) DeepCopy() *DingtalkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DingtalkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DingtalkConfigParameters) DeepCopyInto(out *DingtalkConfigParameters) {
	*out = *in
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DingtalkConfigParameters.
func (in *DingtalkConfigParameters) DeepCopy() *DingtalkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DingtalkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.ScsiControllerType != nil {
		in, out := &in.ScsiControllerType, &out.ScsiControllerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrainInputObservation) DeepCopyInto(out *DrainInputObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrainInputObservation.
func (in *DrainInputObservation) DeepCopy() *DrainInputObservation {
	if in == nil {
		return nil
	}
	out := new(DrainInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrainInputParameters) DeepCopyInto(out *DrainInputParameters) {
	*out = *in
	if in.DeleteLocalData != nil {
		in, out := &in.DeleteLocalData, &out.DeleteLocalData
		*out = new(bool)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDaemonSets != nil {
		in, out := &in.IgnoreDaemonSets, &out.IgnoreDaemonSets
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrainInputParameters.
func (in *DrainInputParameters) DeepCopy() *DrainInputParameters {
	if in == nil {
		return nil
	}
	out := new(DrainInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Driver) DeepCopyInto(out *Driver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Driver.
func (in *Driver) DeepCopy() *Driver {
	if in == nil {
		return nil
	}
	out := new(Driver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Driver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverList) DeepCopyInto(out *DriverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Driver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverList.
func (in *DriverList) DeepCopy() *DriverList {
	if in == nil {
		return nil
	}
	out := new(DriverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DriverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverObservation) DeepCopyInto(out *DriverObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverObservation.
func (in *DriverObservation) DeepCopy() *DriverObservation {
	if in == nil {
		return nil
	}
	out := new(DriverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverParameters) DeepCopyInto(out *DriverParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ActualURL != nil {
		in, out := &in.ActualURL, &out.ActualURL
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Builtin != nil {
		in, out := &in.Builtin, &out.Builtin
		*out = new(bool)
		**out = **in
	}
	if in.Checksum != nil {
		in, out := &in.Checksum, &out.Checksum
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UIURL != nil {
		in, out := &in.UIURL, &out.UIURL
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WhitelistDomains != nil {
		in, out := &in.WhitelistDomains, &out.WhitelistDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverParameters.
func (in *DriverParameters) DeepCopy() *DriverParameters {
	if in == nil {
		return nil
	}
	out := new(DriverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverSpec) DeepCopyInto(out *DriverSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverSpec.
func (in *DriverSpec) DeepCopy() *DriverSpec {
	if in == nil {
		return nil
	}
	out := new(DriverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverStatus) DeepCopyInto(out *DriverStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverStatus.
func (in *DriverStatus) DeepCopy() *DriverStatus {
	if in == nil {
		return nil
	}
	out := new(DriverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcrCredentialPluginObservation) DeepCopyInto(out *EcrCredentialPluginObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcrCredentialPluginObservation.
func (in *EcrCredentialPluginObservation) DeepCopy() *EcrCredentialPluginObservation {
	if in == nil {
		return nil
	}
	out := new(EcrCredentialPluginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcrCredentialPluginParameters) DeepCopyInto(out *EcrCredentialPluginParameters) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKeySecretRef != nil {
		in, out := &in.AwsSecretAccessKeySecretRef, &out.AwsSecretAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AwsSessionTokenSecretRef != nil {
		in, out := &in.AwsSessionTokenSecretRef, &out.AwsSessionTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcrCredentialPluginParameters.
func (in *EcrCredentialPluginParameters) DeepCopy() *EcrCredentialPluginParameters {
	if in == nil {
		return nil
	}
	out := new(EcrCredentialPluginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigObservation) DeepCopyInto(out *ElasticsearchConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigObservation.
func (in *ElasticsearchConfigObservation) DeepCopy() *ElasticsearchConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigParameters) DeepCopyInto(out *ElasticsearchConfigParameters) {
	*out = *in
	if in.AuthPasswordSecretRef != nil {
		in, out := &in.AuthPasswordSecretRef, &out.AuthPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AuthUsernameSecretRef != nil {
		in, out := &in.AuthUsernameSecretRef, &out.AuthUsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeyPassSecretRef != nil {
		in, out := &in.ClientKeyPassSecretRef, &out.ClientKeyPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DateFormat != nil {
		in, out := &in.DateFormat, &out.DateFormat
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.IndexPrefix != nil {
		in, out := &in.IndexPrefix, &out.IndexPrefix
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.SSLVersion != nil {
		in, out := &in.SSLVersion, &out.SSLVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigParameters.
func (in *ElasticsearchConfigParameters) DeepCopy() *ElasticsearchConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackup) DeepCopyInto(out *EtcdBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackup.
func (in *EtcdBackup) DeepCopy() *EtcdBackup {
	if in == nil {
		return nil
	}
	out := new(EtcdBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EtcdBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupBackupConfigObservation) DeepCopyInto(out *EtcdBackupBackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupBackupConfigObservation.
func (in *EtcdBackupBackupConfigObservation) DeepCopy() *EtcdBackupBackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupBackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupBackupConfigParameters) DeepCopyInto(out *EtcdBackupBackupConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IntervalHours != nil {
		in, out := &in.IntervalHours, &out.IntervalHours
		*out = new(float64)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupConfig != nil {
		in, out := &in.S3BackupConfig, &out.S3BackupConfig
		*out = make([]BackupConfigS3BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SafeTimestamp != nil {
		in, out := &in.SafeTimestamp, &out.SafeTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupBackupConfigParameters.
func (in *EtcdBackupBackupConfigParameters) DeepCopy() *EtcdBackupBackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupBackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupList) DeepCopyInto(out *EtcdBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EtcdBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupList.
func (in *EtcdBackupList) DeepCopy() *EtcdBackupList {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EtcdBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupObservation) DeepCopyInto(out *EtcdBackupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupObservation.
func (in *EtcdBackupObservation) DeepCopy() *EtcdBackupObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupParameters) DeepCopyInto(out *EtcdBackupParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = make([]EtcdBackupBackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Manual != nil {
		in, out := &in.Manual, &out.Manual
		*out = new(bool)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupParameters.
func (in *EtcdBackupParameters) DeepCopy() *EtcdBackupParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupSpec) DeepCopyInto(out *EtcdBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupSpec.
func (in *EtcdBackupSpec) DeepCopy() *EtcdBackupSpec {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupStatus) DeepCopyInto(out *EtcdBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupStatus.
func (in *EtcdBackupStatus) DeepCopy() *EtcdBackupStatus {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdObservation) DeepCopyInto(out *EtcdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdObservation.
func (in *EtcdObservation) DeepCopy() *EtcdObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdParameters) DeepCopyInto(out *EtcdParameters) {
	*out = *in
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = make([]BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACert != nil {
		in, out := &in.CACert, &out.CACert
		*out = new(string)
		**out = **in
	}
	if in.CertSecretRef != nil {
		in, out := &in.CertSecretRef, &out.CertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(string)
		**out = **in
	}
	if in.ExternalUrls != nil {
		in, out := &in.ExternalUrls, &out.ExternalUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GID != nil {
		in, out := &in.GID, &out.GID
		*out = new(float64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.KeySecretRef != nil {
		in, out := &in.KeySecretRef, &out.KeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(string)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdParameters.
func (in *EtcdParameters) DeepCopy() *EtcdParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRateLimitObservation) DeepCopyInto(out *EventRateLimitObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRateLimitObservation.
func (in *EventRateLimitObservation) DeepCopy() *EventRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(EventRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRateLimitParameters) DeepCopyInto(out *EventRateLimitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRateLimitParameters.
func (in *EventRateLimitParameters) DeepCopy() *EventRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(EventRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRuleObservation) DeepCopyInto(out *EventRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRuleObservation.
func (in *EventRuleObservation) DeepCopy() *EventRuleObservation {
	if in == nil {
		return nil
	}
	out := new(EventRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRuleParameters) DeepCopyInto(out *EventRuleParameters) {
	*out = *in
	if in.EventType != nil {
		in, out := &in.EventType, &out.EventType
		*out = new(string)
		**out = **in
	}
	if in.ResourceKind != nil {
		in, out := &in.ResourceKind, &out.ResourceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRuleParameters.
func (in *EventRuleParameters) DeepCopy() *EventRuleParameters {
	if in == nil {
		return nil
	}
	out := new(EventRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlannelNetworkProviderObservation) DeepCopyInto(out *FlannelNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlannelNetworkProviderObservation.
func (in *FlannelNetworkProviderObservation) DeepCopy() *FlannelNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(FlannelNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlannelNetworkProviderParameters) DeepCopyInto(out *FlannelNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlannelNetworkProviderParameters.
func (in *FlannelNetworkProviderParameters) DeepCopy() *FlannelNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(FlannelNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentServersObservation) DeepCopyInto(out *FluentServersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentServersObservation.
func (in *FluentServersObservation) DeepCopy() *FluentServersObservation {
	if in == nil {
		return nil
	}
	out := new(FluentServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentServersParameters) DeepCopyInto(out *FluentServersParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SharedKeySecretRef != nil {
		in, out := &in.SharedKeySecretRef, &out.SharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Standby != nil {
		in, out := &in.Standby, &out.Standby
		*out = new(bool)
		**out = **in
	}
	if in.UsernameSecretRef != nil {
		in, out := &in.UsernameSecretRef, &out.UsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentServersParameters.
func (in *FluentServersParameters) DeepCopy() *FluentServersParameters {
	if in == nil {
		return nil
	}
	out := new(FluentServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentdConfigObservation) DeepCopyInto(out *FluentdConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentdConfigObservation.
func (in *FluentdConfigObservation) DeepCopy() *FluentdConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FluentdConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentdConfigParameters) DeepCopyInto(out *FluentdConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.FluentServers != nil {
		in, out := &in.FluentServers, &out.FluentServers
		*out = make([]FluentServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentdConfigParameters.
func (in *FluentdConfigParameters) DeepCopy() *FluentdConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FluentdConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalObservation) DeepCopyInto(out *GlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalObservation.
func (in *GlobalObservation) DeepCopy() *GlobalObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalParameters) DeepCopyInto(out *GlobalParameters) {
	*out = *in
	if in.DisableSecurityGroupIngress != nil {
		in, out := &in.DisableSecurityGroupIngress, &out.DisableSecurityGroupIngress
		*out = new(bool)
		**out = **in
	}
	if in.DisableStrictZoneCheck != nil {
		in, out := &in.DisableStrictZoneCheck, &out.DisableStrictZoneCheck
		*out = new(bool)
		**out = **in
	}
	if in.ELBSecurityGroup != nil {
		in, out := &in.ELBSecurityGroup, &out.ELBSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterID != nil {
		in, out := &in.KubernetesClusterID, &out.KubernetesClusterID
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterTag != nil {
		in, out := &in.KubernetesClusterTag, &out.KubernetesClusterTag
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalParameters.
func (in *GlobalParameters) DeepCopy() *GlobalParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressObservation) DeepCopyInto(out *IngressObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressObservation.
func (in *IngressObservation) DeepCopy() *IngressObservation {
	if in == nil {
		return nil
	}
	out := new(IngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressParameters) DeepCopyInto(out *IngressParameters) {
	*out = *in
	if in.DNSPolicy != nil {
		in, out := &in.DNSPolicy, &out.DNSPolicy
		*out = new(string)
		**out = **in
	}
	if in.DefaultBackend != nil {
		in, out := &in.DefaultBackend, &out.DefaultBackend
		*out = new(bool)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]IngressTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]IngressUpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressParameters.
func (in *IngressParameters) DeepCopy() *IngressParameters {
	if in == nil {
		return nil
	}
	out := new(IngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressTolerationsObservation) DeepCopyInto(out *IngressTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressTolerationsObservation.
func (in *IngressTolerationsObservation) DeepCopy() *IngressTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(IngressTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressTolerationsParameters) DeepCopyInto(out *IngressTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressTolerationsParameters.
func (in *IngressTolerationsParameters) DeepCopy() *IngressTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(IngressTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressUpdateStrategyObservation) DeepCopyInto(out *IngressUpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressUpdateStrategyObservation.
func (in *IngressUpdateStrategyObservation) DeepCopy() *IngressUpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(IngressUpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressUpdateStrategyParameters) DeepCopyInto(out *IngressUpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]UpdateStrategyRollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressUpdateStrategyParameters.
func (in *IngressUpdateStrategyParameters) DeepCopy() *IngressUpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(IngressUpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConfigObservation) DeepCopyInto(out *KafkaConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConfigObservation.
func (in *KafkaConfigObservation) DeepCopy() *KafkaConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConfigParameters) DeepCopyInto(out *KafkaConfigParameters) {
	*out = *in
	if in.BrokerEndpoints != nil {
		in, out := &in.BrokerEndpoints, &out.BrokerEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.ZookeeperEndpoint != nil {
		in, out := &in.ZookeeperEndpoint, &out.ZookeeperEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConfigParameters.
func (in *KafkaConfigParameters) DeepCopy() *KafkaConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIObservation) DeepCopyInto(out *KubeAPIObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIObservation.
func (in *KubeAPIObservation) DeepCopy() *KubeAPIObservation {
	if in == nil {
		return nil
	}
	out := new(KubeAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIParameters) DeepCopyInto(out *KubeAPIParameters) {
	*out = *in
	if in.AdmissionConfiguration != nil {
		in, out := &in.AdmissionConfiguration, &out.AdmissionConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AlwaysPullImages != nil {
		in, out := &in.AlwaysPullImages, &out.AlwaysPullImages
		*out = new(bool)
		**out = **in
	}
	if in.AuditLog != nil {
		in, out := &in.AuditLog, &out.AuditLog
		*out = make([]AuditLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventRateLimit != nil {
		in, out := &in.EventRateLimit, &out.EventRateLimit
		*out = make([]EventRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.PodSecurityPolicy != nil {
		in, out := &in.PodSecurityPolicy, &out.PodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SecretsEncryptionConfig != nil {
		in, out := &in.SecretsEncryptionConfig, &out.SecretsEncryptionConfig
		*out = make([]SecretsEncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
	if in.ServiceNodePortRange != nil {
		in, out := &in.ServiceNodePortRange, &out.ServiceNodePortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIParameters.
func (in *KubeAPIParameters) DeepCopy() *KubeAPIParameters {
	if in == nil {
		return nil
	}
	out := new(KubeAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeControllerObservation) DeepCopyInto(out *KubeControllerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeControllerObservation.
func (in *KubeControllerObservation) DeepCopy() *KubeControllerObservation {
	if in == nil {
		return nil
	}
	out := new(KubeControllerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeControllerParameters) DeepCopyInto(out *KubeControllerParameters) {
	*out = *in
	if in.ClusterCidr != nil {
		in, out := &in.ClusterCidr, &out.ClusterCidr
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeControllerParameters.
func (in *KubeControllerParameters) DeepCopy() *KubeControllerParameters {
	if in == nil {
		return nil
	}
	out := new(KubeControllerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletObservation) DeepCopyInto(out *KubeletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletObservation.
func (in *KubeletObservation) DeepCopy() *KubeletObservation {
	if in == nil {
		return nil
	}
	out := new(KubeletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletParameters) DeepCopyInto(out *KubeletParameters) {
	*out = *in
	if in.ClusterDNSServer != nil {
		in, out := &in.ClusterDNSServer, &out.ClusterDNSServer
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.GenerateServingCertificate != nil {
		in, out := &in.GenerateServingCertificate, &out.GenerateServingCertificate
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InfraContainerImage != nil {
		in, out := &in.InfraContainerImage, &out.InfraContainerImage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletParameters.
func (in *KubeletParameters) DeepCopy() *KubeletParameters {
	if in == nil {
		return nil
	}
	out := new(KubeletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeproxyObservation) DeepCopyInto(out *KubeproxyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeproxyObservation.
func (in *KubeproxyObservation) DeepCopy() *KubeproxyObservation {
	if in == nil {
		return nil
	}
	out := new(KubeproxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeproxyParameters) DeepCopyInto(out *KubeproxyParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeproxyParameters.
func (in *KubeproxyParameters) DeepCopy() *KubeproxyParameters {
	if in == nil {
		return nil
	}
	out := new(KubeproxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinearAutoscalerParamsObservation) DeepCopyInto(out *LinearAutoscalerParamsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinearAutoscalerParamsObservation.
func (in *LinearAutoscalerParamsObservation) DeepCopy() *LinearAutoscalerParamsObservation {
	if in == nil {
		return nil
	}
	out := new(LinearAutoscalerParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinearAutoscalerParamsParameters) DeepCopyInto(out *LinearAutoscalerParamsParameters) {
	*out = *in
	if in.CoresPerReplica != nil {
		in, out := &in.CoresPerReplica, &out.CoresPerReplica
		*out = new(float64)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.NodesPerReplica != nil {
		in, out := &in.NodesPerReplica, &out.NodesPerReplica
		*out = new(float64)
		**out = **in
	}
	if in.PreventSinglePointFailure != nil {
		in, out := &in.PreventSinglePointFailure, &out.PreventSinglePointFailure
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinearAutoscalerParamsParameters.
func (in *LinearAutoscalerParamsParameters) DeepCopy() *LinearAutoscalerParamsParameters {
	if in == nil {
		return nil
	}
	out := new(LinearAutoscalerParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.CreateMonitor != nil {
		in, out := &in.CreateMonitor, &out.CreateMonitor
		*out = new(bool)
		**out = **in
	}
	if in.FloatingNetworkID != nil {
		in, out := &in.FloatingNetworkID, &out.FloatingNetworkID
		*out = new(string)
		**out = **in
	}
	if in.LBMethod != nil {
		in, out := &in.LBMethod, &out.LBMethod
		*out = new(string)
		**out = **in
	}
	if in.LBProvider != nil {
		in, out := &in.LBProvider, &out.LBProvider
		*out = new(string)
		**out = **in
	}
	if in.LBVersion != nil {
		in, out := &in.LBVersion, &out.LBVersion
		*out = new(string)
		**out = **in
	}
	if in.ManageSecurityGroups != nil {
		in, out := &in.ManageSecurityGroups, &out.ManageSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.MonitorDelay != nil {
		in, out := &in.MonitorDelay, &out.MonitorDelay
		*out = new(string)
		**out = **in
	}
	if in.MonitorMaxRetries != nil {
		in, out := &in.MonitorMaxRetries, &out.MonitorMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MonitorTimeout != nil {
		in, out := &in.MonitorTimeout, &out.MonitorTimeout
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UseOctavia != nil {
		in, out := &in.UseOctavia, &out.UseOctavia
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Logging) DeepCopyInto(out *Logging) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Logging.
func (in *Logging) DeepCopy() *Logging {
	if in == nil {
		return nil
	}
	out := new(Logging)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Logging) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingList) DeepCopyInto(out *LoggingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Logging, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingList.
func (in *LoggingList) DeepCopy() *LoggingList {
	if in == nil {
		return nil
	}
	out := new(LoggingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomTargetConfig != nil {
		in, out := &in.CustomTargetConfig, &out.CustomTargetConfig
		*out = make([]CustomTargetConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConfig != nil {
		in, out := &in.ElasticsearchConfig, &out.ElasticsearchConfig
		*out = make([]ElasticsearchConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableJSONParsing != nil {
		in, out := &in.EnableJSONParsing, &out.EnableJSONParsing
		*out = new(bool)
		**out = **in
	}
	if in.FluentdConfig != nil {
		in, out := &in.FluentdConfig, &out.FluentdConfig
		*out = make([]FluentdConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaConfig != nil {
		in, out := &in.KafkaConfig, &out.KafkaConfig
		*out = make([]KafkaConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.OutputFlushInterval != nil {
		in, out := &in.OutputFlushInterval, &out.OutputFlushInterval
		*out = new(float64)
		**out = **in
	}
	if in.OutputTags != nil {
		in, out := &in.OutputTags, &out.OutputTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SplunkConfig != nil {
		in, out := &in.SplunkConfig, &out.SplunkConfig
		*out = make([]SplunkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SyslogConfig != nil {
		in, out := &in.SyslogConfig, &out.SyslogConfig
		*out = make([]SyslogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingSpec) DeepCopyInto(out *LoggingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingSpec.
func (in *LoggingSpec) DeepCopy() *LoggingSpec {
	if in == nil {
		return nil
	}
	out := new(LoggingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingStatus) DeepCopyInto(out *LoggingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingStatus.
func (in *LoggingStatus) DeepCopy() *LoggingStatus {
	if in == nil {
		return nil
	}
	out := new(LoggingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersObservation) DeepCopyInto(out *MembersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersObservation.
func (in *MembersObservation) DeepCopy() *MembersObservation {
	if in == nil {
		return nil
	}
	out := new(MembersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersParameters) DeepCopyInto(out *MembersParameters) {
	*out = *in
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.GroupPrincipalID != nil {
		in, out := &in.GroupPrincipalID, &out.GroupPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserPrincipalID != nil {
		in, out := &in.UserPrincipalID, &out.UserPrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersParameters.
func (in *MembersParameters) DeepCopy() *MembersParameters {
	if in == nil {
		return nil
	}
	out := new(MembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SearchOrder != nil {
		in, out := &in.SearchOrder, &out.SearchOrder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRuleObservation) DeepCopyInto(out *MetricRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRuleObservation.
func (in *MetricRuleObservation) DeepCopy() *MetricRuleObservation {
	if in == nil {
		return nil
	}
	out := new(MetricRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRuleParameters) DeepCopyInto(out *MetricRuleParameters) {
	*out = *in
	if in.Comparison != nil {
		in, out := &in.Comparison, &out.Comparison
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.ThresholdValue != nil {
		in, out := &in.ThresholdValue, &out.ThresholdValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRuleParameters.
func (in *MetricRuleParameters) DeepCopy() *MetricRuleParameters {
	if in == nil {
		return nil
	}
	out := new(MetricRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringObservation) DeepCopyInto(out *MonitoringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringObservation.
func (in *MonitoringObservation) DeepCopy() *MonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringParameters) DeepCopyInto(out *MonitoringParameters) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(float64)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]MonitoringTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]MonitoringUpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringParameters.
func (in *MonitoringParameters) DeepCopy() *MonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringTolerationsObservation) DeepCopyInto(out *MonitoringTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringTolerationsObservation.
func (in *MonitoringTolerationsObservation) DeepCopy() *MonitoringTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringTolerationsParameters) DeepCopyInto(out *MonitoringTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringTolerationsParameters.
func (in *MonitoringTolerationsParameters) DeepCopy() *MonitoringTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyObservation) DeepCopyInto(out *MonitoringUpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyObservation.
func (in *MonitoringUpdateStrategyObservation) DeepCopy() *MonitoringUpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyParameters) DeepCopyInto(out *MonitoringUpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]MonitoringUpdateStrategyRollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyParameters.
func (in *MonitoringUpdateStrategyParameters) DeepCopy() *MonitoringUpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyRollingUpdateObservation) DeepCopyInto(out *MonitoringUpdateStrategyRollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyRollingUpdateObservation.
func (in *MonitoringUpdateStrategyRollingUpdateObservation) DeepCopy() *MonitoringUpdateStrategyRollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyRollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyRollingUpdateParameters) DeepCopyInto(out *MonitoringUpdateStrategyRollingUpdateParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyRollingUpdateParameters.
func (in *MonitoringUpdateStrategyRollingUpdateParameters) DeepCopy() *MonitoringUpdateStrategyRollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyRollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MsteamsConfigObservation) DeepCopyInto(out *MsteamsConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MsteamsConfigObservation.
func (in *MsteamsConfigObservation) DeepCopy() *MsteamsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MsteamsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MsteamsConfigParameters) DeepCopyInto(out *MsteamsConfigParameters) {
	*out = *in
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MsteamsConfigParameters.
func (in *MsteamsConfigParameters) DeepCopy() *MsteamsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MsteamsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.PublicNetwork != nil {
		in, out := &in.PublicNetwork, &out.PublicNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkTolerationsObservation) DeepCopyInto(out *NetworkTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkTolerationsObservation.
func (in *NetworkTolerationsObservation) DeepCopy() *NetworkTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkTolerationsParameters) DeepCopyInto(out *NetworkTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkTolerationsParameters.
func (in *NetworkTolerationsParameters) DeepCopy() *NetworkTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeRuleObservation) DeepCopyInto(out *NodeRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeRuleObservation.
func (in *NodeRuleObservation) DeepCopy() *NodeRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NodeRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeRuleParameters) DeepCopyInto(out *NodeRuleParameters) {
	*out = *in
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MemThreshold != nil {
		in, out := &in.MemThreshold, &out.MemThreshold
		*out = new(float64)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeRuleParameters.
func (in *NodeRuleParameters) DeepCopy() *NodeRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NodeRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodelocalObservation) DeepCopyInto(out *NodelocalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodelocalObservation.
func (in *NodelocalObservation) DeepCopy() *NodelocalObservation {
	if in == nil {
		return nil
	}
	out := new(NodelocalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodelocalParameters) DeepCopyInto(out *NodelocalParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodelocalParameters.
func (in *NodelocalParameters) DeepCopy() *NodelocalParameters {
	if in == nil {
		return nil
	}
	out := new(NodelocalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesObservation) DeepCopyInto(out *NodesObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPAddress != nil {
		in, out := &in.ExternalIPAddress, &out.ExternalIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodePoolID != nil {
		in, out := &in.NodePoolID, &out.NodePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTemplateID != nil {
		in, out := &in.NodeTemplateID, &out.NodeTemplateID
		*out = new(string)
		**out = **in
	}
	if in.ProviderID != nil {
		in, out := &in.ProviderID, &out.ProviderID
		*out = new(string)
		**out = **in
	}
	if in.RequestedHostname != nil {
		in, out := &in.RequestedHostname, &out.RequestedHostname
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.SystemInfo != nil {
		in, out := &in.SystemInfo, &out.SystemInfo
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesObservation.
func (in *NodesObservation) DeepCopy() *NodesObservation {
	if in == nil {
		return nil
	}
	out := new(NodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesParameters) DeepCopyInto(out *NodesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesParameters.
func (in *NodesParameters) DeepCopy() *NodesParameters {
	if in == nil {
		return nil
	}
	out := new(NodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Notifier) DeepCopyInto(out *Notifier) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Notifier.
func (in *Notifier) DeepCopy() *Notifier {
	if in == nil {
		return nil
	}
	out := new(Notifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Notifier) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifierList) DeepCopyInto(out *NotifierList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Notifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifierList.
func (in *NotifierList) DeepCopy() *NotifierList {
	if in == nil {
		return nil
	}
	out := new(NotifierList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotifierList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifierObservation) DeepCopyInto(out *NotifierObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifierObservation.
func (in *NotifierObservation) DeepCopy() *NotifierObservation {
	if in == nil {
		return nil
	}
	out := new(NotifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifierParameters) DeepCopyInto(out *NotifierParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DingtalkConfig != nil {
		in, out := &in.DingtalkConfig, &out.DingtalkConfig
		*out = make([]DingtalkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MsteamsConfig != nil {
		in, out := &in.MsteamsConfig, &out.MsteamsConfig
		*out = make([]MsteamsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PagerdutyConfig != nil {
		in, out := &in.PagerdutyConfig, &out.PagerdutyConfig
		*out = make([]PagerdutyConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SMTPConfig != nil {
		in, out := &in.SMTPConfig, &out.SMTPConfig
		*out = make([]SMTPConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SendResolved != nil {
		in, out := &in.SendResolved, &out.SendResolved
		*out = new(bool)
		**out = **in
	}
	if in.SlackConfig != nil {
		in, out := &in.SlackConfig, &out.SlackConfig
		*out = make([]SlackConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookConfig != nil {
		in, out := &in.WebhookConfig, &out.WebhookConfig
		*out = make([]WebhookConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WechatConfig != nil {
		in, out := &in.WechatConfig, &out.WechatConfig
		*out = make([]WechatConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifierParameters.
func (in *NotifierParameters) DeepCopy() *NotifierParameters {
	if in == nil {
		return nil
	}
	out := new(NotifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifierSpec) DeepCopyInto(out *NotifierSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifierSpec.
func (in *NotifierSpec) DeepCopy() *NotifierSpec {
	if in == nil {
		return nil
	}
	out := new(NotifierSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotifierStatus) DeepCopyInto(out *NotifierStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotifierStatus.
func (in *NotifierStatus) DeepCopy() *NotifierStatus {
	if in == nil {
		return nil
	}
	out := new(NotifierStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderGlobalObservation) DeepCopyInto(out *OpenstackCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderGlobalObservation.
func (in *OpenstackCloudProviderGlobalObservation) DeepCopy() *OpenstackCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderGlobalParameters) DeepCopyInto(out *OpenstackCloudProviderGlobalParameters) {
	*out = *in
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.DomainIDSecretRef != nil {
		in, out := &in.DomainIDSecretRef, &out.DomainIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TenantIDSecretRef != nil {
		in, out := &in.TenantIDSecretRef, &out.TenantIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
	if in.TrustIDSecretRef != nil {
		in, out := &in.TrustIDSecretRef, &out.TrustIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.UsernameSecretRef = in.UsernameSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderGlobalParameters.
func (in *OpenstackCloudProviderGlobalParameters) DeepCopy() *OpenstackCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderObservation) DeepCopyInto(out *OpenstackCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderObservation.
func (in *OpenstackCloudProviderObservation) DeepCopy() *OpenstackCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderParameters) DeepCopyInto(out *OpenstackCloudProviderParameters) {
	*out = *in
	if in.BlockStorage != nil {
		in, out := &in.BlockStorage, &out.BlockStorage
		*out = make([]BlockStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]OpenstackCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]LoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderParameters.
func (in *OpenstackCloudProviderParameters) DeepCopy() *OpenstackCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagerdutyConfigObservation) DeepCopyInto(out *PagerdutyConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagerdutyConfigObservation.
func (in *PagerdutyConfigObservation) DeepCopy() *PagerdutyConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PagerdutyConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagerdutyConfigParameters) DeepCopyInto(out *PagerdutyConfigParameters) {
	*out = *in
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceKey != nil {
		in, out := &in.ServiceKey, &out.ServiceKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagerdutyConfigParameters.
func (in *PagerdutyConfigParameters) DeepCopy() *PagerdutyConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PagerdutyConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesObservation) DeepCopyInto(out *PrivateRegistriesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesObservation.
func (in *PrivateRegistriesObservation) DeepCopy() *PrivateRegistriesObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesParameters) DeepCopyInto(out *PrivateRegistriesParameters) {
	*out = *in
	if in.EcrCredentialPlugin != nil {
		in, out := &in.EcrCredentialPlugin, &out.EcrCredentialPlugin
		*out = make([]EcrCredentialPluginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesParameters.
func (in *PrivateRegistriesParameters) DeepCopy() *PrivateRegistriesParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuestionsObservation) DeepCopyInto(out *QuestionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuestionsObservation.
func (in *QuestionsObservation) DeepCopy() *QuestionsObservation {
	if in == nil {
		return nil
	}
	out := new(QuestionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuestionsParameters) DeepCopyInto(out *QuestionsParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuestionsParameters.
func (in *QuestionsParameters) DeepCopy() *QuestionsParameters {
	if in == nil {
		return nil
	}
	out := new(QuestionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientsObservation) DeepCopyInto(out *RecipientsObservation) {
	*out = *in
	if in.NotifierType != nil {
		in, out := &in.NotifierType, &out.NotifierType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientsObservation.
func (in *RecipientsObservation) DeepCopy() *RecipientsObservation {
	if in == nil {
		return nil
	}
	out := new(RecipientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientsParameters) DeepCopyInto(out *RecipientsParameters) {
	*out = *in
	if in.DefaultRecipient != nil {
		in, out := &in.DefaultRecipient, &out.DefaultRecipient
		*out = new(bool)
		**out = **in
	}
	if in.NotifierID != nil {
		in, out := &in.NotifierID, &out.NotifierID
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientsParameters.
func (in *RecipientsParameters) DeepCopy() *RecipientsParameters {
	if in == nil {
		return nil
	}
	out := new(RecipientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNetworkObservation) DeepCopyInto(out *RkeConfigNetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNetworkObservation.
func (in *RkeConfigNetworkObservation) DeepCopy() *RkeConfigNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNetworkParameters) DeepCopyInto(out *RkeConfigNetworkParameters) {
	*out = *in
	if in.CalicoNetworkProvider != nil {
		in, out := &in.CalicoNetworkProvider, &out.CalicoNetworkProvider
		*out = make([]CalicoNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanalNetworkProvider != nil {
		in, out := &in.CanalNetworkProvider, &out.CanalNetworkProvider
		*out = make([]CanalNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlannelNetworkProvider != nil {
		in, out := &in.FlannelNetworkProvider, &out.FlannelNetworkProvider
		*out = make([]FlannelNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(string)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]NetworkTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeaveNetworkProvider != nil {
		in, out := &in.WeaveNetworkProvider, &out.WeaveNetworkProvider
		*out = make([]WeaveNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNetworkParameters.
func (in *RkeConfigNetworkParameters) DeepCopy() *RkeConfigNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNodesObservation) DeepCopyInto(out *RkeConfigNodesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNodesObservation.
func (in *RkeConfigNodesObservation) DeepCopy() *RkeConfigNodesObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNodesParameters) DeepCopyInto(out *RkeConfigNodesParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.DockerSocket != nil {
		in, out := &in.DockerSocket, &out.DockerSocket
		*out = new(string)
		**out = **in
	}
	if in.HostnameOverride != nil {
		in, out := &in.HostnameOverride, &out.HostnameOverride
		*out = new(string)
		**out = **in
	}
	if in.InternalAddress != nil {
		in, out := &in.InternalAddress, &out.InternalAddress
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNodesParameters.
func (in *RkeConfigNodesParameters) DeepCopy() *RkeConfigNodesParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigObservation) DeepCopyInto(out *RkeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigObservation.
func (in *RkeConfigObservation) DeepCopy() *RkeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigParameters) DeepCopyInto(out *RkeConfigParameters) {
	*out = *in
	if in.AddonJobTimeout != nil {
		in, out := &in.AddonJobTimeout, &out.AddonJobTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = new(string)
		**out = **in
	}
	if in.AddonsInclude != nil {
		in, out := &in.AddonsInclude, &out.AddonsInclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = make([]AuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]AuthorizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BastionHost != nil {
		in, out := &in.BastionHost, &out.BastionHost
		*out = make([]BastionHostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = make([]CloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableCriDockerd != nil {
		in, out := &in.EnableCriDockerd, &out.EnableCriDockerd
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreDockerVersion != nil {
		in, out := &in.IgnoreDockerVersion, &out.IgnoreDockerVersion
		*out = new(bool)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]IngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]RkeConfigNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]RkeConfigNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixPath != nil {
		in, out := &in.PrefixPath, &out.PrefixPath
		*out = new(string)
		**out = **in
	}
	if in.PrivateRegistries != nil {
		in, out := &in.PrivateRegistries, &out.PrivateRegistries
		*out = make([]PrivateRegistriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHCertPath != nil {
		in, out := &in.SSHCertPath, &out.SSHCertPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpgradeStrategy != nil {
		in, out := &in.UpgradeStrategy, &out.UpgradeStrategy
		*out = make([]UpgradeStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WinPrefixPath != nil {
		in, out := &in.WinPrefixPath, &out.WinPrefixPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigParameters.
func (in *RkeConfigParameters) DeepCopy() *RkeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBinding) DeepCopyInto(out *RoleTemplateBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBinding.
func (in *RoleTemplateBinding) DeepCopy() *RoleTemplateBinding {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplateBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingList) DeepCopyInto(out *RoleTemplateBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RoleTemplateBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingList.
func (in *RoleTemplateBindingList) DeepCopy() *RoleTemplateBindingList {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplateBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingObservation) DeepCopyInto(out *RoleTemplateBindingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingObservation.
func (in *RoleTemplateBindingObservation) DeepCopy() *RoleTemplateBindingObservation {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingParameters) DeepCopyInto(out *RoleTemplateBindingParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupPrincipalID != nil {
		in, out := &in.GroupPrincipalID, &out.GroupPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RoleTemplateID != nil {
		in, out := &in.RoleTemplateID, &out.RoleTemplateID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserPrincipalID != nil {
		in, out := &in.UserPrincipalID, &out.UserPrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingParameters.
func (in *RoleTemplateBindingParameters) DeepCopy() *RoleTemplateBindingParameters {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingSpec) DeepCopyInto(out *RoleTemplateBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingSpec.
func (in *RoleTemplateBindingSpec) DeepCopy() *RoleTemplateBindingSpec {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingStatus) DeepCopyInto(out *RoleTemplateBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingStatus.
func (in *RoleTemplateBindingStatus) DeepCopy() *RoleTemplateBindingStatus {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateObservation) DeepCopyInto(out *RollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateObservation.
func (in *RollingUpdateObservation) DeepCopy() *RollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateParameters) DeepCopyInto(out *RollingUpdateParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateParameters.
func (in *RollingUpdateParameters) DeepCopy() *RollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.RouterID != nil {
		in, out := &in.RouterID, &out.RouterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigObservation) DeepCopyInto(out *S3BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigObservation.
func (in *S3BackupConfigObservation) DeepCopy() *S3BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigParameters) DeepCopyInto(out *S3BackupConfigParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CustomCA != nil {
		in, out := &in.CustomCA, &out.CustomCA
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigParameters.
func (in *S3BackupConfigParameters) DeepCopy() *S3BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMTPConfigObservation) DeepCopyInto(out *SMTPConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMTPConfigObservation.
func (in *SMTPConfigObservation) DeepCopy() *SMTPConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SMTPConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMTPConfigParameters) DeepCopyInto(out *SMTPConfigParameters) {
	*out = *in
	if in.DefaultRecipient != nil {
		in, out := &in.DefaultRecipient, &out.DefaultRecipient
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Sender != nil {
		in, out := &in.Sender, &out.Sender
		*out = new(string)
		**out = **in
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMTPConfigParameters.
func (in *SMTPConfigParameters) DeepCopy() *SMTPConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SMTPConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanConfigObservation) DeepCopyInto(out *ScanConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanConfigObservation.
func (in *ScanConfigObservation) DeepCopy() *ScanConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScanConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanConfigParameters) DeepCopyInto(out *ScanConfigParameters) {
	*out = *in
	if in.CisScanConfig != nil {
		in, out := &in.CisScanConfig, &out.CisScanConfig
		*out = make([]CisScanConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanConfigParameters.
func (in *ScanConfigParameters) DeepCopy() *ScanConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScanConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleConfigObservation) DeepCopyInto(out *ScheduleConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleConfigObservation.
func (in *ScheduleConfigObservation) DeepCopy() *ScheduleConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleConfigParameters) DeepCopyInto(out *ScheduleConfigParameters) {
	*out = *in
	if in.CronSchedule != nil {
		in, out := &in.CronSchedule, &out.CronSchedule
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleConfigParameters.
func (in *ScheduleConfigParameters) DeepCopy() *ScheduleConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanObservation) DeepCopyInto(out *ScheduledClusterScanObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanObservation.
func (in *ScheduledClusterScanObservation) DeepCopy() *ScheduledClusterScanObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanParameters) DeepCopyInto(out *ScheduledClusterScanParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ScanConfig != nil {
		in, out := &in.ScanConfig, &out.ScanConfig
		*out = make([]ScanConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScheduleConfig != nil {
		in, out := &in.ScheduleConfig, &out.ScheduleConfig
		*out = make([]ScheduleConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanParameters.
func (in *ScheduledClusterScanParameters) DeepCopy() *ScheduledClusterScanParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerObservation) DeepCopyInto(out *SchedulerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerObservation.
func (in *SchedulerObservation) DeepCopy() *SchedulerObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerParameters) DeepCopyInto(out *SchedulerParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerParameters.
func (in *SchedulerParameters) DeepCopy() *SchedulerParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsEncryptionConfigObservation) DeepCopyInto(out *SecretsEncryptionConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsEncryptionConfigObservation.
func (in *SecretsEncryptionConfigObservation) DeepCopy() *SecretsEncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecretsEncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsEncryptionConfigParameters) DeepCopyInto(out *SecretsEncryptionConfigParameters) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsEncryptionConfigParameters.
func (in *SecretsEncryptionConfigParameters) DeepCopy() *SecretsEncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecretsEncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceOverrideObservation) DeepCopyInto(out *ServiceOverrideObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceOverrideObservation.
func (in *ServiceOverrideObservation) DeepCopy() *ServiceOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceOverrideParameters) DeepCopyInto(out *ServiceOverrideParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SigningMethod != nil {
		in, out := &in.SigningMethod, &out.SigningMethod
		*out = new(string)
		**out = **in
	}
	if in.SigningName != nil {
		in, out := &in.SigningName, &out.SigningName
		*out = new(string)
		**out = **in
	}
	if in.SigningRegion != nil {
		in, out := &in.SigningRegion, &out.SigningRegion
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceOverrideParameters.
func (in *ServiceOverrideParameters) DeepCopy() *ServiceOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesObservation) DeepCopyInto(out *ServicesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesObservation.
func (in *ServicesObservation) DeepCopy() *ServicesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesParameters) DeepCopyInto(out *ServicesParameters) {
	*out = *in
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = make([]EtcdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeAPI != nil {
		in, out := &in.KubeAPI, &out.KubeAPI
		*out = make([]KubeAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeController != nil {
		in, out := &in.KubeController, &out.KubeController
		*out = make([]KubeControllerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = make([]KubeletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubeproxy != nil {
		in, out := &in.Kubeproxy, &out.Kubeproxy
		*out = make([]KubeproxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = make([]SchedulerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesParameters.
func (in *ServicesParameters) DeepCopy() *ServicesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackConfigObservation) DeepCopyInto(out *SlackConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackConfigObservation.
func (in *SlackConfigObservation) DeepCopy() *SlackConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SlackConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackConfigParameters) DeepCopyInto(out *SlackConfigParameters) {
	*out = *in
	if in.DefaultRecipient != nil {
		in, out := &in.DefaultRecipient, &out.DefaultRecipient
		*out = new(string)
		**out = **in
	}
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackConfigParameters.
func (in *SlackConfigParameters) DeepCopy() *SlackConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SlackConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigObservation) DeepCopyInto(out *SplunkConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigObservation.
func (in *SplunkConfigObservation) DeepCopy() *SplunkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigParameters) DeepCopyInto(out *SplunkConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeyPassSecretRef != nil {
		in, out := &in.ClientKeyPassSecretRef, &out.ClientKeyPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigParameters.
func (in *SplunkConfigParameters) DeepCopy() *SplunkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageClass) DeepCopyInto(out *StorageClass) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageClass.
func (in *StorageClass) DeepCopy() *StorageClass {
	if in == nil {
		return nil
	}
	out := new(StorageClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageClass) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageClassList) DeepCopyInto(out *StorageClassList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageClassList.
func (in *StorageClassList) DeepCopy() *StorageClassList {
	if in == nil {
		return nil
	}
	out := new(StorageClassList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageClassList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageClassObservation) DeepCopyInto(out *StorageClassObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageClassObservation.
func (in *StorageClassObservation) DeepCopy() *StorageClassObservation {
	if in == nil {
		return nil
	}
	out := new(StorageClassObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageClassParameters) DeepCopyInto(out *StorageClassParameters) {
	*out = *in
	if in.AllowVolumeExpansion != nil {
		in, out := &in.AllowVolumeExpansion, &out.AllowVolumeExpansion
		*out = new(bool)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.K8SProvisioner != nil {
		in, out := &in.K8SProvisioner, &out.K8SProvisioner
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReclaimPolicy != nil {
		in, out := &in.ReclaimPolicy, &out.ReclaimPolicy
		*out = new(string)
		**out = **in
	}
	if in.VolumeBindingMode != nil {
		in, out := &in.VolumeBindingMode, &out.VolumeBindingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageClassParameters.
func (in *StorageClassParameters) DeepCopy() *StorageClassParameters {
	if in == nil {
		return nil
	}
	out := new(StorageClassParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageClassSpec) DeepCopyInto(out *StorageClassSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageClassSpec.
func (in *StorageClassSpec) DeepCopy() *StorageClassSpec {
	if in == nil {
		return nil
	}
	out := new(StorageClassSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageClassStatus) DeepCopyInto(out *StorageClassStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageClassStatus.
func (in *StorageClassStatus) DeepCopy() *StorageClassStatus {
	if in == nil {
		return nil
	}
	out := new(StorageClassStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sync) DeepCopyInto(out *Sync) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sync.
func (in *Sync) DeepCopy() *Sync {
	if in == nil {
		return nil
	}
	out := new(Sync)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Sync) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncList) DeepCopyInto(out *SyncList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Sync, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncList.
func (in *SyncList) DeepCopy() *SyncList {
	if in == nil {
		return nil
	}
	out := new(SyncList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SyncList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncObservation) DeepCopyInto(out *SyncObservation) {
	*out = *in
	if in.DefaultProjectID != nil {
		in, out := &in.DefaultProjectID, &out.DefaultProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]NodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SystemProjectID != nil {
		in, out := &in.SystemProjectID, &out.SystemProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncObservation.
func (in *SyncObservation) DeepCopy() *SyncObservation {
	if in == nil {
		return nil
	}
	out := new(SyncObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncParameters) DeepCopyInto(out *SyncParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NodePoolIds != nil {
		in, out := &in.NodePoolIds, &out.NodePoolIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StateConfirm != nil {
		in, out := &in.StateConfirm, &out.StateConfirm
		*out = new(float64)
		**out = **in
	}
	if in.Synced != nil {
		in, out := &in.Synced, &out.Synced
		*out = new(bool)
		**out = **in
	}
	if in.WaitAlerting != nil {
		in, out := &in.WaitAlerting, &out.WaitAlerting
		*out = new(bool)
		**out = **in
	}
	if in.WaitCatalogs != nil {
		in, out := &in.WaitCatalogs, &out.WaitCatalogs
		*out = new(bool)
		**out = **in
	}
	if in.WaitMonitoring != nil {
		in, out := &in.WaitMonitoring, &out.WaitMonitoring
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncParameters.
func (in *SyncParameters) DeepCopy() *SyncParameters {
	if in == nil {
		return nil
	}
	out := new(SyncParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncSpec) DeepCopyInto(out *SyncSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncSpec.
func (in *SyncSpec) DeepCopy() *SyncSpec {
	if in == nil {
		return nil
	}
	out := new(SyncSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncStatus) DeepCopyInto(out *SyncStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncStatus.
func (in *SyncStatus) DeepCopy() *SyncStatus {
	if in == nil {
		return nil
	}
	out := new(SyncStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogConfigObservation) DeepCopyInto(out *SyslogConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogConfigObservation.
func (in *SyslogConfigObservation) DeepCopy() *SyslogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SyslogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogConfigParameters) DeepCopyInto(out *SyslogConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Program != nil {
		in, out := &in.Program, &out.Program
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogConfigParameters.
func (in *SyslogConfigParameters) DeepCopy() *SyslogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SyslogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemServiceRuleObservation) DeepCopyInto(out *SystemServiceRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemServiceRuleObservation.
func (in *SystemServiceRuleObservation) DeepCopy() *SystemServiceRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SystemServiceRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemServiceRuleParameters) DeepCopyInto(out *SystemServiceRuleParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemServiceRuleParameters.
func (in *SystemServiceRuleParameters) DeepCopy() *SystemServiceRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SystemServiceRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Template) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateList) DeepCopyInto(out *TemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Template, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateList.
func (in *TemplateList) DeepCopy() *TemplateList {
	if in == nil {
		return nil
	}
	out := new(TemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateObservation) DeepCopyInto(out *TemplateObservation) {
	*out = *in
	if in.DefaultRevisionID != nil {
		in, out := &in.DefaultRevisionID, &out.DefaultRevisionID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateObservation.
func (in *TemplateObservation) DeepCopy() *TemplateObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameters) DeepCopyInto(out *TemplateParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TemplateRevisions != nil {
		in, out := &in.TemplateRevisions, &out.TemplateRevisions
		*out = make([]TemplateRevisionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameters.
func (in *TemplateParameters) DeepCopy() *TemplateParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRevisionsObservation) DeepCopyInto(out *TemplateRevisionsObservation) {
	*out = *in
	if in.ClusterTemplateID != nil {
		in, out := &in.ClusterTemplateID, &out.ClusterTemplateID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRevisionsObservation.
func (in *TemplateRevisionsObservation) DeepCopy() *TemplateRevisionsObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateRevisionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRevisionsParameters) DeepCopyInto(out *TemplateRevisionsParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Questions != nil {
		in, out := &in.Questions, &out.Questions
		*out = make([]QuestionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRevisionsParameters.
func (in *TemplateRevisionsParameters) DeepCopy() *TemplateRevisionsParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateRevisionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateSpec) DeepCopyInto(out *TemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateSpec.
func (in *TemplateSpec) DeepCopy() *TemplateSpec {
	if in == nil {
		return nil
	}
	out := new(TemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateStatus) DeepCopyInto(out *TemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateStatus.
func (in *TemplateStatus) DeepCopy() *TemplateStatus {
	if in == nil {
		return nil
	}
	out := new(TemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TolerationsObservation) DeepCopyInto(out *TolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TolerationsObservation.
func (in *TolerationsObservation) DeepCopy() *TolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(TolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TolerationsParameters) DeepCopyInto(out *TolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TolerationsParameters.
func (in *TolerationsParameters) DeepCopy() *TolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(TolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyObservation) DeepCopyInto(out *UpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyObservation.
func (in *UpdateStrategyObservation) DeepCopy() *UpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyParameters) DeepCopyInto(out *UpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]RollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyParameters.
func (in *UpdateStrategyParameters) DeepCopy() *UpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyRollingUpdateObservation) DeepCopyInto(out *UpdateStrategyRollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyRollingUpdateObservation.
func (in *UpdateStrategyRollingUpdateObservation) DeepCopy() *UpdateStrategyRollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyRollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyRollingUpdateParameters) DeepCopyInto(out *UpdateStrategyRollingUpdateParameters) {
	*out = *in
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyRollingUpdateParameters.
func (in *UpdateStrategyRollingUpdateParameters) DeepCopy() *UpdateStrategyRollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyRollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyObservation) DeepCopyInto(out *UpgradeStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyObservation.
func (in *UpgradeStrategyObservation) DeepCopy() *UpgradeStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyParameters) DeepCopyInto(out *UpgradeStrategyParameters) {
	*out = *in
	if in.Drain != nil {
		in, out := &in.Drain, &out.Drain
		*out = new(bool)
		**out = **in
	}
	if in.DrainInput != nil {
		in, out := &in.DrainInput, &out.DrainInput
		*out = make([]DrainInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnavailableControlplane != nil {
		in, out := &in.MaxUnavailableControlplane, &out.MaxUnavailableControlplane
		*out = new(string)
		**out = **in
	}
	if in.MaxUnavailableWorker != nil {
		in, out := &in.MaxUnavailableWorker, &out.MaxUnavailableWorker
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyParameters.
func (in *UpgradeStrategyParameters) DeepCopy() *UpgradeStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCenterObservation) DeepCopyInto(out *VirtualCenterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCenterObservation.
func (in *VirtualCenterObservation) DeepCopy() *VirtualCenterObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualCenterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCenterParameters) DeepCopyInto(out *VirtualCenterParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCenterParameters.
func (in *VirtualCenterParameters) DeepCopy() *VirtualCenterParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCenterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderGlobalObservation) DeepCopyInto(out *VsphereCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderGlobalObservation.
func (in *VsphereCloudProviderGlobalObservation) DeepCopy() *VsphereCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderGlobalParameters) DeepCopyInto(out *VsphereCloudProviderGlobalParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.InsecureFlag != nil {
		in, out := &in.InsecureFlag, &out.InsecureFlag
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderGlobalParameters.
func (in *VsphereCloudProviderGlobalParameters) DeepCopy() *VsphereCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderObservation) DeepCopyInto(out *VsphereCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderObservation.
func (in *VsphereCloudProviderObservation) DeepCopy() *VsphereCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderParameters) DeepCopyInto(out *VsphereCloudProviderParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]VsphereCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualCenter != nil {
		in, out := &in.VirtualCenter, &out.VirtualCenter
		*out = make([]VirtualCenterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderParameters.
func (in *VsphereCloudProviderParameters) DeepCopy() *VsphereCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeaveNetworkProviderObservation) DeepCopyInto(out *WeaveNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeaveNetworkProviderObservation.
func (in *WeaveNetworkProviderObservation) DeepCopy() *WeaveNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(WeaveNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeaveNetworkProviderParameters) DeepCopyInto(out *WeaveNetworkProviderParameters) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeaveNetworkProviderParameters.
func (in *WeaveNetworkProviderParameters) DeepCopy() *WeaveNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(WeaveNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookConfigObservation) DeepCopyInto(out *WebhookConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookConfigObservation.
func (in *WebhookConfigObservation) DeepCopy() *WebhookConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookConfigParameters) DeepCopyInto(out *WebhookConfigParameters) {
	*out = *in
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookConfigParameters.
func (in *WebhookConfigParameters) DeepCopy() *WebhookConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WechatConfigObservation) DeepCopyInto(out *WechatConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WechatConfigObservation.
func (in *WechatConfigObservation) DeepCopy() *WechatConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WechatConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WechatConfigParameters) DeepCopyInto(out *WechatConfigParameters) {
	*out = *in
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = new(string)
		**out = **in
	}
	if in.Corp != nil {
		in, out := &in.Corp, &out.Corp
		*out = new(string)
		**out = **in
	}
	if in.DefaultRecipient != nil {
		in, out := &in.DefaultRecipient, &out.DefaultRecipient
		*out = new(string)
		**out = **in
	}
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.RecipientType != nil {
		in, out := &in.RecipientType, &out.RecipientType
		*out = new(string)
		**out = **in
	}
	out.SecretSecretRef = in.SecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WechatConfigParameters.
func (in *WechatConfigParameters) DeepCopy() *WechatConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WechatConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DefaultDatastore != nil {
		in, out := &in.DefaultDatastore, &out.DefaultDatastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcepoolPath != nil {
		in, out := &in.ResourcepoolPath, &out.ResourcepoolPath
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}
