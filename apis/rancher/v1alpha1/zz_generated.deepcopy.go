//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Amazonec2ConfigObservation) DeepCopyInto(out *Amazonec2ConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Amazonec2ConfigObservation.
func (in *Amazonec2ConfigObservation) DeepCopy() *Amazonec2ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(Amazonec2ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Amazonec2ConfigParameters) DeepCopyInto(out *Amazonec2ConfigParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EncryptEBSVolume != nil {
		in, out := &in.EncryptEBSVolume, &out.EncryptEBSVolume
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.InsecureTransport != nil {
		in, out := &in.InsecureTransport, &out.InsecureTransport
		*out = new(bool)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KeypairName != nil {
		in, out := &in.KeypairName, &out.KeypairName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.OpenPort != nil {
		in, out := &in.OpenPort, &out.OpenPort
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateAddressOnly != nil {
		in, out := &in.PrivateAddressOnly, &out.PrivateAddressOnly
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequestSpotInstance != nil {
		in, out := &in.RequestSpotInstance, &out.RequestSpotInstance
		*out = new(bool)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(string)
		**out = **in
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyContentsSecretRef != nil {
		in, out := &in.SSHKeyContentsSecretRef, &out.SSHKeyContentsSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecurityGroup != nil {
		in, out := &in.SecurityGroup, &out.SecurityGroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupReadonly != nil {
		in, out := &in.SecurityGroupReadonly, &out.SecurityGroupReadonly
		*out = new(bool)
		**out = **in
	}
	if in.SessionTokenSecretRef != nil {
		in, out := &in.SessionTokenSecretRef, &out.SessionTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.UseEBSOptimizedInstance != nil {
		in, out := &in.UseEBSOptimizedInstance, &out.UseEBSOptimizedInstance
		*out = new(bool)
		**out = **in
	}
	if in.UsePrivateAddress != nil {
		in, out := &in.UsePrivateAddress, &out.UsePrivateAddress
		*out = new(bool)
		**out = **in
	}
	if in.Userdata != nil {
		in, out := &in.Userdata, &out.Userdata
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Amazonec2ConfigParameters.
func (in *Amazonec2ConfigParameters) DeepCopy() *Amazonec2ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(Amazonec2ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Amazonec2CredentialConfigObservation) DeepCopyInto(out *Amazonec2CredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Amazonec2CredentialConfigObservation.
func (in *Amazonec2CredentialConfigObservation) DeepCopy() *Amazonec2CredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(Amazonec2CredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Amazonec2CredentialConfigParameters) DeepCopyInto(out *Amazonec2CredentialConfigParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.DefaultRegion != nil {
		in, out := &in.DefaultRegion, &out.DefaultRegion
		*out = new(string)
		**out = **in
	}
	out.SecretKeySecretRef = in.SecretKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Amazonec2CredentialConfigParameters.
func (in *Amazonec2CredentialConfigParameters) DeepCopy() *Amazonec2CredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(Amazonec2CredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureConfigObservation) DeepCopyInto(out *AzureConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureConfigObservation.
func (in *AzureConfigObservation) DeepCopy() *AzureConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureConfigParameters) DeepCopyInto(out *AzureConfigParameters) {
	*out = *in
	if in.AvailabilitySet != nil {
		in, out := &in.AvailabilitySet, &out.AvailabilitySet
		*out = new(string)
		**out = **in
	}
	if in.ClientIDSecretRef != nil {
		in, out := &in.ClientIDSecretRef, &out.ClientIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CustomData != nil {
		in, out := &in.CustomData, &out.CustomData
		*out = new(string)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.DockerPort != nil {
		in, out := &in.DockerPort, &out.DockerPort
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.FaultDomainCount != nil {
		in, out := &in.FaultDomainCount, &out.FaultDomainCount
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedDisks != nil {
		in, out := &in.ManagedDisks, &out.ManagedDisks
		*out = new(bool)
		**out = **in
	}
	if in.NoPublicIP != nil {
		in, out := &in.NoPublicIP, &out.NoPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.Nsg != nil {
		in, out := &in.Nsg, &out.Nsg
		*out = new(string)
		**out = **in
	}
	if in.OpenPort != nil {
		in, out := &in.OpenPort, &out.OpenPort
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.StaticPublicIP != nil {
		in, out := &in.StaticPublicIP, &out.StaticPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.SubnetPrefix != nil {
		in, out := &in.SubnetPrefix, &out.SubnetPrefix
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionIDSecretRef != nil {
		in, out := &in.SubscriptionIDSecretRef, &out.SubscriptionIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TenantIDSecretRef != nil {
		in, out := &in.TenantIDSecretRef, &out.TenantIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.UpdateDomainCount != nil {
		in, out := &in.UpdateDomainCount, &out.UpdateDomainCount
		*out = new(string)
		**out = **in
	}
	if in.UsePrivateIP != nil {
		in, out := &in.UsePrivateIP, &out.UsePrivateIP
		*out = new(bool)
		**out = **in
	}
	if in.Vnet != nil {
		in, out := &in.Vnet, &out.Vnet
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureConfigParameters.
func (in *AzureConfigParameters) DeepCopy() *AzureConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCredentialConfigObservation) DeepCopyInto(out *AzureCredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCredentialConfigObservation.
func (in *AzureCredentialConfigObservation) DeepCopy() *AzureCredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureCredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCredentialConfigParameters) DeepCopyInto(out *AzureCredentialConfigParameters) {
	*out = *in
	out.ClientIDSecretRef = in.ClientIDSecretRef
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	out.SubscriptionIDSecretRef = in.SubscriptionIDSecretRef
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCredentialConfigParameters.
func (in *AzureCredentialConfigParameters) DeepCopy() *AzureCredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudCredential) DeepCopyInto(out *CloudCredential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudCredential.
func (in *CloudCredential) DeepCopy() *CloudCredential {
	if in == nil {
		return nil
	}
	out := new(CloudCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudCredential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudCredentialList) DeepCopyInto(out *CloudCredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudCredentialList.
func (in *CloudCredentialList) DeepCopy() *CloudCredentialList {
	if in == nil {
		return nil
	}
	out := new(CloudCredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudCredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudCredentialObservation) DeepCopyInto(out *CloudCredentialObservation) {
	*out = *in
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudCredentialObservation.
func (in *CloudCredentialObservation) DeepCopy() *CloudCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(CloudCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudCredentialParameters) DeepCopyInto(out *CloudCredentialParameters) {
	*out = *in
	if in.Amazonec2CredentialConfig != nil {
		in, out := &in.Amazonec2CredentialConfig, &out.Amazonec2CredentialConfig
		*out = make([]Amazonec2CredentialConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzureCredentialConfig != nil {
		in, out := &in.AzureCredentialConfig, &out.AzureCredentialConfig
		*out = make([]AzureCredentialConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DigitaloceanCredentialConfig != nil {
		in, out := &in.DigitaloceanCredentialConfig, &out.DigitaloceanCredentialConfig
		*out = make([]DigitaloceanCredentialConfigParameters, len(*in))
		copy(*out, *in)
	}
	if in.GoogleCredentialConfig != nil {
		in, out := &in.GoogleCredentialConfig, &out.GoogleCredentialConfig
		*out = make([]GoogleCredentialConfigParameters, len(*in))
		copy(*out, *in)
	}
	if in.HarvesterCredentialConfig != nil {
		in, out := &in.HarvesterCredentialConfig, &out.HarvesterCredentialConfig
		*out = make([]HarvesterCredentialConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LinodeCredentialConfig != nil {
		in, out := &in.LinodeCredentialConfig, &out.LinodeCredentialConfig
		*out = make([]LinodeCredentialConfigParameters, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenstackCredentialConfig != nil {
		in, out := &in.OpenstackCredentialConfig, &out.OpenstackCredentialConfig
		*out = make([]OpenstackCredentialConfigParameters, len(*in))
		copy(*out, *in)
	}
	if in.S3CredentialConfig != nil {
		in, out := &in.S3CredentialConfig, &out.S3CredentialConfig
		*out = make([]S3CredentialConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsphereCredentialConfig != nil {
		in, out := &in.VsphereCredentialConfig, &out.VsphereCredentialConfig
		*out = make([]VsphereCredentialConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudCredentialParameters.
func (in *CloudCredentialParameters) DeepCopy() *CloudCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(CloudCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudCredentialSpec) DeepCopyInto(out *CloudCredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudCredentialSpec.
func (in *CloudCredentialSpec) DeepCopy() *CloudCredentialSpec {
	if in == nil {
		return nil
	}
	out := new(CloudCredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudCredentialStatus) DeepCopyInto(out *CloudCredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudCredentialStatus.
func (in *CloudCredentialStatus) DeepCopy() *CloudCredentialStatus {
	if in == nil {
		return nil
	}
	out := new(CloudCredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DigitaloceanConfigObservation) DeepCopyInto(out *DigitaloceanConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DigitaloceanConfigObservation.
func (in *DigitaloceanConfigObservation) DeepCopy() *DigitaloceanConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DigitaloceanConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DigitaloceanConfigParameters) DeepCopyInto(out *DigitaloceanConfigParameters) {
	*out = *in
	if in.AccessTokenSecretRef != nil {
		in, out := &in.AccessTokenSecretRef, &out.AccessTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Backups != nil {
		in, out := &in.Backups, &out.Backups
		*out = new(bool)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.PrivateNetworking != nil {
		in, out := &in.PrivateNetworking, &out.PrivateNetworking
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyContentsSecretRef != nil {
		in, out := &in.SSHKeyContentsSecretRef, &out.SSHKeyContentsSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeyFingerprintSecretRef != nil {
		in, out := &in.SSHKeyFingerprintSecretRef, &out.SSHKeyFingerprintSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHPort != nil {
		in, out := &in.SSHPort, &out.SSHPort
		*out = new(string)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.Userdata != nil {
		in, out := &in.Userdata, &out.Userdata
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DigitaloceanConfigParameters.
func (in *DigitaloceanConfigParameters) DeepCopy() *DigitaloceanConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DigitaloceanConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DigitaloceanCredentialConfigObservation) DeepCopyInto(out *DigitaloceanCredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DigitaloceanCredentialConfigObservation.
func (in *DigitaloceanCredentialConfigObservation) DeepCopy() *DigitaloceanCredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DigitaloceanCredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DigitaloceanCredentialConfigParameters) DeepCopyInto(out *DigitaloceanCredentialConfigParameters) {
	*out = *in
	out.AccessTokenSecretRef = in.AccessTokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DigitaloceanCredentialConfigParameters.
func (in *DigitaloceanCredentialConfigParameters) DeepCopy() *DigitaloceanCredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DigitaloceanCredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Feature) DeepCopyInto(out *Feature) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Feature.
func (in *Feature) DeepCopy() *Feature {
	if in == nil {
		return nil
	}
	out := new(Feature)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Feature) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureList) DeepCopyInto(out *FeatureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Feature, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureList.
func (in *FeatureList) DeepCopy() *FeatureList {
	if in == nil {
		return nil
	}
	out := new(FeatureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeatureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureObservation) DeepCopyInto(out *FeatureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureObservation.
func (in *FeatureObservation) DeepCopy() *FeatureObservation {
	if in == nil {
		return nil
	}
	out := new(FeatureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureParameters) DeepCopyInto(out *FeatureParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureParameters.
func (in *FeatureParameters) DeepCopy() *FeatureParameters {
	if in == nil {
		return nil
	}
	out := new(FeatureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureSpec) DeepCopyInto(out *FeatureSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureSpec.
func (in *FeatureSpec) DeepCopy() *FeatureSpec {
	if in == nil {
		return nil
	}
	out := new(FeatureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureStatus) DeepCopyInto(out *FeatureStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureStatus.
func (in *FeatureStatus) DeepCopy() *FeatureStatus {
	if in == nil {
		return nil
	}
	out := new(FeatureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCredentialConfigObservation) DeepCopyInto(out *GoogleCredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCredentialConfigObservation.
func (in *GoogleCredentialConfigObservation) DeepCopy() *GoogleCredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GoogleCredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCredentialConfigParameters) DeepCopyInto(out *GoogleCredentialConfigParameters) {
	*out = *in
	out.AuthEncodedJSONSecretRef = in.AuthEncodedJSONSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCredentialConfigParameters.
func (in *GoogleCredentialConfigParameters) DeepCopy() *GoogleCredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleCredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HarvesterConfigObservation) DeepCopyInto(out *HarvesterConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HarvesterConfigObservation.
func (in *HarvesterConfigObservation) DeepCopy() *HarvesterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HarvesterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HarvesterConfigParameters) DeepCopyInto(out *HarvesterConfigParameters) {
	*out = *in
	if in.CPUCount != nil {
		in, out := &in.CPUCount, &out.CPUCount
		*out = new(string)
		**out = **in
	}
	if in.DiskBus != nil {
		in, out := &in.DiskBus, &out.DiskBus
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.MemorySize != nil {
		in, out := &in.MemorySize, &out.MemorySize
		*out = new(string)
		**out = **in
	}
	if in.NetworkData != nil {
		in, out := &in.NetworkData, &out.NetworkData
		*out = new(string)
		**out = **in
	}
	if in.NetworkModel != nil {
		in, out := &in.NetworkModel, &out.NetworkModel
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.SSHPasswordSecretRef != nil {
		in, out := &in.SSHPasswordSecretRef, &out.SSHPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VMNamespace != nil {
		in, out := &in.VMNamespace, &out.VMNamespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HarvesterConfigParameters.
func (in *HarvesterConfigParameters) DeepCopy() *HarvesterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HarvesterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HarvesterCredentialConfigObservation) DeepCopyInto(out *HarvesterCredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HarvesterCredentialConfigObservation.
func (in *HarvesterCredentialConfigObservation) DeepCopy() *HarvesterCredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HarvesterCredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HarvesterCredentialConfigParameters) DeepCopyInto(out *HarvesterCredentialConfigParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	out.KubeconfigContentSecretRef = in.KubeconfigContentSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HarvesterCredentialConfigParameters.
func (in *HarvesterCredentialConfigParameters) DeepCopy() *HarvesterCredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HarvesterCredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinodeConfigObservation) DeepCopyInto(out *LinodeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinodeConfigObservation.
func (in *LinodeConfigObservation) DeepCopy() *LinodeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinodeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinodeConfigParameters) DeepCopyInto(out *LinodeConfigParameters) {
	*out = *in
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = new(string)
		**out = **in
	}
	if in.CreatePrivateIP != nil {
		in, out := &in.CreatePrivateIP, &out.CreatePrivateIP
		*out = new(bool)
		**out = **in
	}
	if in.DockerPort != nil {
		in, out := &in.DockerPort, &out.DockerPort
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RootPassSecretRef != nil {
		in, out := &in.RootPassSecretRef, &out.RootPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHPort != nil {
		in, out := &in.SSHPort, &out.SSHPort
		*out = new(string)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Stackscript != nil {
		in, out := &in.Stackscript, &out.Stackscript
		*out = new(string)
		**out = **in
	}
	if in.StackscriptData != nil {
		in, out := &in.StackscriptData, &out.StackscriptData
		*out = new(string)
		**out = **in
	}
	if in.SwapSize != nil {
		in, out := &in.SwapSize, &out.SwapSize
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.UaPrefix != nil {
		in, out := &in.UaPrefix, &out.UaPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinodeConfigParameters.
func (in *LinodeConfigParameters) DeepCopy() *LinodeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinodeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinodeCredentialConfigObservation) DeepCopyInto(out *LinodeCredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinodeCredentialConfigObservation.
func (in *LinodeCredentialConfigObservation) DeepCopy() *LinodeCredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinodeCredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinodeCredentialConfigParameters) DeepCopyInto(out *LinodeCredentialConfigParameters) {
	*out = *in
	out.TokenSecretRef = in.TokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinodeCredentialConfigParameters.
func (in *LinodeCredentialConfigParameters) DeepCopy() *LinodeCredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinodeCredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfig) DeepCopyInto(out *MachineConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfig.
func (in *MachineConfig) DeepCopy() *MachineConfig {
	if in == nil {
		return nil
	}
	out := new(MachineConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MachineConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfigList) DeepCopyInto(out *MachineConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MachineConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfigList.
func (in *MachineConfigList) DeepCopy() *MachineConfigList {
	if in == nil {
		return nil
	}
	out := new(MachineConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MachineConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfigObservation) DeepCopyInto(out *MachineConfigObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfigObservation.
func (in *MachineConfigObservation) DeepCopy() *MachineConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MachineConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfigParameters) DeepCopyInto(out *MachineConfigParameters) {
	*out = *in
	if in.Amazonec2Config != nil {
		in, out := &in.Amazonec2Config, &out.Amazonec2Config
		*out = make([]Amazonec2ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzureConfig != nil {
		in, out := &in.AzureConfig, &out.AzureConfig
		*out = make([]AzureConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DigitaloceanConfig != nil {
		in, out := &in.DigitaloceanConfig, &out.DigitaloceanConfig
		*out = make([]DigitaloceanConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FleetNamespace != nil {
		in, out := &in.FleetNamespace, &out.FleetNamespace
		*out = new(string)
		**out = **in
	}
	if in.GenerateName != nil {
		in, out := &in.GenerateName, &out.GenerateName
		*out = new(string)
		**out = **in
	}
	if in.HarvesterConfig != nil {
		in, out := &in.HarvesterConfig, &out.HarvesterConfig
		*out = make([]HarvesterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LinodeConfig != nil {
		in, out := &in.LinodeConfig, &out.LinodeConfig
		*out = make([]LinodeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpenstackConfig != nil {
		in, out := &in.OpenstackConfig, &out.OpenstackConfig
		*out = make([]OpenstackConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsphereConfig != nil {
		in, out := &in.VsphereConfig, &out.VsphereConfig
		*out = make([]VsphereConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfigParameters.
func (in *MachineConfigParameters) DeepCopy() *MachineConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MachineConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfigSpec) DeepCopyInto(out *MachineConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfigSpec.
func (in *MachineConfigSpec) DeepCopy() *MachineConfigSpec {
	if in == nil {
		return nil
	}
	out := new(MachineConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineConfigStatus) DeepCopyInto(out *MachineConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineConfigStatus.
func (in *MachineConfigStatus) DeepCopy() *MachineConfigStatus {
	if in == nil {
		return nil
	}
	out := new(MachineConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackConfigObservation) DeepCopyInto(out *OpenstackConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackConfigObservation.
func (in *OpenstackConfigObservation) DeepCopy() *OpenstackConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackConfigParameters) DeepCopyInto(out *OpenstackConfigParameters) {
	*out = *in
	if in.ActiveTimeout != nil {
		in, out := &in.ActiveTimeout, &out.ActiveTimeout
		*out = new(string)
		**out = **in
	}
	if in.ApplicationCredentialID != nil {
		in, out := &in.ApplicationCredentialID, &out.ApplicationCredentialID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationCredentialName != nil {
		in, out := &in.ApplicationCredentialName, &out.ApplicationCredentialName
		*out = new(string)
		**out = **in
	}
	if in.ApplicationCredentialSecretSecretRef != nil {
		in, out := &in.ApplicationCredentialSecretSecretRef, &out.ApplicationCredentialSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BootFromVolume != nil {
		in, out := &in.BootFromVolume, &out.BootFromVolume
		*out = new(bool)
		**out = **in
	}
	if in.Cacert != nil {
		in, out := &in.Cacert, &out.Cacert
		*out = new(string)
		**out = **in
	}
	if in.ConfigDrive != nil {
		in, out := &in.ConfigDrive, &out.ConfigDrive
		*out = new(bool)
		**out = **in
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.FlavorName != nil {
		in, out := &in.FlavorName, &out.FlavorName
		*out = new(string)
		**out = **in
	}
	if in.FloatingIPPool != nil {
		in, out := &in.FloatingIPPool, &out.FloatingIPPool
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeypairName != nil {
		in, out := &in.KeypairName, &out.KeypairName
		*out = new(string)
		**out = **in
	}
	if in.NetID != nil {
		in, out := &in.NetID, &out.NetID
		*out = new(string)
		**out = **in
	}
	if in.NetName != nil {
		in, out := &in.NetName, &out.NetName
		*out = new(string)
		**out = **in
	}
	if in.NovaNetwork != nil {
		in, out := &in.NovaNetwork, &out.NovaNetwork
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PrivateKeyFileSecretRef != nil {
		in, out := &in.PrivateKeyFileSecretRef, &out.PrivateKeyFileSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHPort != nil {
		in, out := &in.SSHPort, &out.SSHPort
		*out = new(string)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.SecGroups != nil {
		in, out := &in.SecGroups, &out.SecGroups
		*out = new(string)
		**out = **in
	}
	if in.TenantDomainID != nil {
		in, out := &in.TenantDomainID, &out.TenantDomainID
		*out = new(string)
		**out = **in
	}
	if in.TenantDomainName != nil {
		in, out := &in.TenantDomainName, &out.TenantDomainName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
	if in.UserDataFile != nil {
		in, out := &in.UserDataFile, &out.UserDataFile
		*out = new(string)
		**out = **in
	}
	if in.UserDomainID != nil {
		in, out := &in.UserDomainID, &out.UserDomainID
		*out = new(string)
		**out = **in
	}
	if in.UserDomainName != nil {
		in, out := &in.UserDomainName, &out.UserDomainName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VolumeDevicePath != nil {
		in, out := &in.VolumeDevicePath, &out.VolumeDevicePath
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeName != nil {
		in, out := &in.VolumeName, &out.VolumeName
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackConfigParameters.
func (in *OpenstackConfigParameters) DeepCopy() *OpenstackConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCredentialConfigObservation) DeepCopyInto(out *OpenstackCredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCredentialConfigObservation.
func (in *OpenstackCredentialConfigObservation) DeepCopy() *OpenstackCredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCredentialConfigParameters) DeepCopyInto(out *OpenstackCredentialConfigParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCredentialConfigParameters.
func (in *OpenstackCredentialConfigParameters) DeepCopy() *OpenstackCredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplate) DeepCopyInto(out *RoleTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplate.
func (in *RoleTemplate) DeepCopy() *RoleTemplate {
	if in == nil {
		return nil
	}
	out := new(RoleTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateList) DeepCopyInto(out *RoleTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RoleTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateList.
func (in *RoleTemplateList) DeepCopy() *RoleTemplateList {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateObservation) DeepCopyInto(out *RoleTemplateObservation) {
	*out = *in
	if in.Builtin != nil {
		in, out := &in.Builtin, &out.Builtin
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateObservation.
func (in *RoleTemplateObservation) DeepCopy() *RoleTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateParameters) DeepCopyInto(out *RoleTemplateParameters) {
	*out = *in
	if in.Administrative != nil {
		in, out := &in.Administrative, &out.Administrative
		*out = new(bool)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DefaultRole != nil {
		in, out := &in.DefaultRole, &out.DefaultRole
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(bool)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Locked != nil {
		in, out := &in.Locked, &out.Locked
		*out = new(bool)
		**out = **in
	}
	if in.RoleTemplateIds != nil {
		in, out := &in.RoleTemplateIds, &out.RoleTemplateIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateParameters.
func (in *RoleTemplateParameters) DeepCopy() *RoleTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateSpec) DeepCopyInto(out *RoleTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateSpec.
func (in *RoleTemplateSpec) DeepCopy() *RoleTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateStatus) DeepCopyInto(out *RoleTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateStatus.
func (in *RoleTemplateStatus) DeepCopy() *RoleTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NonResourceUrls != nil {
		in, out := &in.NonResourceUrls, &out.NonResourceUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceNames != nil {
		in, out := &in.ResourceNames, &out.ResourceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Verbs != nil {
		in, out := &in.Verbs, &out.Verbs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3CredentialConfigObservation) DeepCopyInto(out *S3CredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3CredentialConfigObservation.
func (in *S3CredentialConfigObservation) DeepCopy() *S3CredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(S3CredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3CredentialConfigParameters) DeepCopyInto(out *S3CredentialConfigParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.DefaultBucket != nil {
		in, out := &in.DefaultBucket, &out.DefaultBucket
		*out = new(string)
		**out = **in
	}
	if in.DefaultEndpoint != nil {
		in, out := &in.DefaultEndpoint, &out.DefaultEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DefaultEndpointCASecretRef != nil {
		in, out := &in.DefaultEndpointCASecretRef, &out.DefaultEndpointCASecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DefaultFolder != nil {
		in, out := &in.DefaultFolder, &out.DefaultFolder
		*out = new(string)
		**out = **in
	}
	if in.DefaultRegion != nil {
		in, out := &in.DefaultRegion, &out.DefaultRegion
		*out = new(string)
		**out = **in
	}
	if in.DefaultSkipSSLVerify != nil {
		in, out := &in.DefaultSkipSSLVerify, &out.DefaultSkipSSLVerify
		*out = new(bool)
		**out = **in
	}
	out.SecretKeySecretRef = in.SecretKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3CredentialConfigParameters.
func (in *S3CredentialConfigParameters) DeepCopy() *S3CredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(S3CredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Setting) DeepCopyInto(out *Setting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Setting.
func (in *Setting) DeepCopy() *Setting {
	if in == nil {
		return nil
	}
	out := new(Setting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Setting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingList) DeepCopyInto(out *SettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Setting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingList.
func (in *SettingList) DeepCopy() *SettingList {
	if in == nil {
		return nil
	}
	out := new(SettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingObservation) DeepCopyInto(out *SettingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingObservation.
func (in *SettingObservation) DeepCopy() *SettingObservation {
	if in == nil {
		return nil
	}
	out := new(SettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingParameters) DeepCopyInto(out *SettingParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingParameters.
func (in *SettingParameters) DeepCopy() *SettingParameters {
	if in == nil {
		return nil
	}
	out := new(SettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingSpec) DeepCopyInto(out *SettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingSpec.
func (in *SettingSpec) DeepCopy() *SettingSpec {
	if in == nil {
		return nil
	}
	out := new(SettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingStatus) DeepCopyInto(out *SettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingStatus.
func (in *SettingStatus) DeepCopy() *SettingStatus {
	if in == nil {
		return nil
	}
	out := new(SettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIds != nil {
		in, out := &in.PrincipalIds, &out.PrincipalIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereConfigObservation) DeepCopyInto(out *VsphereConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereConfigObservation.
func (in *VsphereConfigObservation) DeepCopy() *VsphereConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereConfigParameters) DeepCopyInto(out *VsphereConfigParameters) {
	*out = *in
	if in.Boot2DockerURL != nil {
		in, out := &in.Boot2DockerURL, &out.Boot2DockerURL
		*out = new(string)
		**out = **in
	}
	if in.CPUCount != nil {
		in, out := &in.CPUCount, &out.CPUCount
		*out = new(string)
		**out = **in
	}
	if in.Cfgparam != nil {
		in, out := &in.Cfgparam, &out.Cfgparam
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CloneFrom != nil {
		in, out := &in.CloneFrom, &out.CloneFrom
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = new(string)
		**out = **in
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = new(string)
		**out = **in
	}
	if in.ContentLibrary != nil {
		in, out := &in.ContentLibrary, &out.ContentLibrary
		*out = new(string)
		**out = **in
	}
	if in.CreationType != nil {
		in, out := &in.CreationType, &out.CreationType
		*out = new(string)
		**out = **in
	}
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.DatastoreCluster != nil {
		in, out := &in.DatastoreCluster, &out.DatastoreCluster
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Hostsystem != nil {
		in, out := &in.Hostsystem, &out.Hostsystem
		*out = new(string)
		**out = **in
	}
	if in.MemorySize != nil {
		in, out := &in.MemorySize, &out.MemorySize
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Pool != nil {
		in, out := &in.Pool, &out.Pool
		*out = new(string)
		**out = **in
	}
	if in.SSHPasswordSecretRef != nil {
		in, out := &in.SSHPasswordSecretRef, &out.SSHPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHPort != nil {
		in, out := &in.SSHPort, &out.SSHPort
		*out = new(string)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.SSHUserGroup != nil {
		in, out := &in.SSHUserGroup, &out.SSHUserGroup
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VappIPAllocationPolicy != nil {
		in, out := &in.VappIPAllocationPolicy, &out.VappIPAllocationPolicy
		*out = new(string)
		**out = **in
	}
	if in.VappIPProtocol != nil {
		in, out := &in.VappIPProtocol, &out.VappIPProtocol
		*out = new(string)
		**out = **in
	}
	if in.VappProperty != nil {
		in, out := &in.VappProperty, &out.VappProperty
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VappTransport != nil {
		in, out := &in.VappTransport, &out.VappTransport
		*out = new(string)
		**out = **in
	}
	if in.Vcenter != nil {
		in, out := &in.Vcenter, &out.Vcenter
		*out = new(string)
		**out = **in
	}
	if in.VcenterPort != nil {
		in, out := &in.VcenterPort, &out.VcenterPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereConfigParameters.
func (in *VsphereConfigParameters) DeepCopy() *VsphereConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCredentialConfigObservation) DeepCopyInto(out *VsphereCredentialConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCredentialConfigObservation.
func (in *VsphereCredentialConfigObservation) DeepCopy() *VsphereCredentialConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCredentialConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCredentialConfigParameters) DeepCopyInto(out *VsphereCredentialConfigParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Vcenter != nil {
		in, out := &in.Vcenter, &out.Vcenter
		*out = new(string)
		**out = **in
	}
	if in.VcenterPort != nil {
		in, out := &in.VcenterPort, &out.VcenterPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCredentialConfigParameters.
func (in *VsphereCredentialConfigParameters) DeepCopy() *VsphereCredentialConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCredentialConfigParameters)
	in.DeepCopyInto(out)
	return out
}
